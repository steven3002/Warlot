{
  "doc": " Defines an unsigned, fixed-point numeric type with a 32-bit integer part and a 32-bit fractional\n part. The notation `uq32_32` and `UQ32_32` is based on\n [Q notation](https://en.wikipedia.org/wiki/Q_(number_format)). `q` indicates it a fixed-point\n number. The `u` prefix indicates it is unsigned. The `32_32` suffix indicates the number of\n bits, where the first number indicates the number of bits in the integer part, and the second\n the number of bits in the fractional part--in this case 32 bits for each.",
  "immediate_dependencies": [],
  "attributes": [],
  "functions": {
    "from_quotient": {
      "source_index": 0,
      "index": 0,
      "doc": " Create a fixed-point value from a quotient specified by its numerator and denominator.\n `from_quotient` and `from_int` should be preferred over using `from_raw`.\n Unless the denominator is a power of two, fractions can not be represented accurately,\n so be careful about rounding errors.\n Aborts if the denominator is zero.\n Aborts if the input is non-zero but so small that it will be represented as zero, e.g. smaller\n than 2^{-32}.\n Aborts if the input is too large, e.g. larger than or equal to 2^32.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "numerator",
          "type_": "u64"
        },
        {
          "name": "denominator",
          "type_": "u64"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "uq32_32"
            },
            "name": "UQ32_32",
            "type_arguments": []
          }
        }
      ]
    },
    "from_int": {
      "source_index": 1,
      "index": 1,
      "doc": " Create a fixed-point value from an integer.\n `from_int` and `from_quotient` should be preferred over using `from_raw`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "integer",
          "type_": "u32"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "uq32_32"
            },
            "name": "UQ32_32",
            "type_arguments": []
          }
        }
      ]
    },
    "add": {
      "source_index": 2,
      "index": 2,
      "doc": " Add two fixed-point numbers, `a + b`.\n Aborts if the sum overflows.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "a",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        },
        {
          "name": "b",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "uq32_32"
            },
            "name": "UQ32_32",
            "type_arguments": []
          }
        }
      ]
    },
    "sub": {
      "source_index": 3,
      "index": 3,
      "doc": " Subtract two fixed-point numbers, `a - b`.\n Aborts if `a < b`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "a",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        },
        {
          "name": "b",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "uq32_32"
            },
            "name": "UQ32_32",
            "type_arguments": []
          }
        }
      ]
    },
    "mul": {
      "source_index": 4,
      "index": 4,
      "doc": " Multiply two fixed-point numbers, truncating any fractional part of the product.\n Aborts if the product overflows.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "a",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        },
        {
          "name": "b",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "uq32_32"
            },
            "name": "UQ32_32",
            "type_arguments": []
          }
        }
      ]
    },
    "div": {
      "source_index": 5,
      "index": 5,
      "doc": " Divide two fixed-point numbers, truncating any fractional part of the quotient.\n Aborts if the divisor is zero.\n Aborts if the quotient overflows.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "a",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        },
        {
          "name": "b",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "uq32_32"
            },
            "name": "UQ32_32",
            "type_arguments": []
          }
        }
      ]
    },
    "to_int": {
      "source_index": 6,
      "index": 6,
      "doc": " Convert a fixed-point number to an integer, truncating any fractional part.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "a",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        "u32"
      ]
    },
    "int_mul": {
      "source_index": 7,
      "index": 7,
      "doc": " Multiply a `u64` integer by a fixed-point number, truncating any fractional part of the product.\n Aborts if the product overflows.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "val",
          "type_": "u64"
        },
        {
          "name": "multiplier",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "int_div": {
      "source_index": 8,
      "index": 8,
      "doc": " Divide a `u64` integer by a fixed-point number, truncating any fractional part of the quotient.\n Aborts if the divisor is zero.\n Aborts if the quotient overflows.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "val",
          "type_": "u64"
        },
        {
          "name": "divisor",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "le": {
      "source_index": 9,
      "index": 9,
      "doc": " Less than or equal to. Returns `true` if and only if `a <= a`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "a",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        },
        {
          "name": "b",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "lt": {
      "source_index": 10,
      "index": 10,
      "doc": " Less than. Returns `true` if and only if `a < b`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "a",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        },
        {
          "name": "b",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "ge": {
      "source_index": 11,
      "index": 11,
      "doc": " Greater than or equal to. Returns `true` if and only if `a >= b`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "a",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        },
        {
          "name": "b",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "gt": {
      "source_index": 12,
      "index": 12,
      "doc": " Greater than. Returns `true` if and only if `a > b`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "a",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        },
        {
          "name": "b",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "to_raw": {
      "source_index": 13,
      "index": 13,
      "doc": " Accessor for the raw u64 value. Can be paired with `from_raw` to perform less common operations\n on the raw values directly.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "a",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq32_32"
              },
              "name": "UQ32_32",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "from_raw": {
      "source_index": 14,
      "index": 14,
      "doc": " Accessor for the raw u64 value. Can be paired with `to_raw` to perform less common operations\n on the raw values directly.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "raw_value",
          "type_": "u64"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "uq32_32"
            },
            "name": "UQ32_32",
            "type_arguments": []
          }
        }
      ]
    }
  },
  "structs": {
    "UQ32_32": {
      "index": 0,
      "doc": " A fixed-point numeric type with 32 integer bits and 32 fractional bits, represented by an\n underlying 64 bit value. This is a binary representation, so decimal values may not be exactly\n representable, but it provides more than 9 decimal digits of precision both before and after the\n decimal point (18 digits total).",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop",
        "Store"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": true,
        "fields": {
          "pos0": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    }
  },
  "enums": {}
}