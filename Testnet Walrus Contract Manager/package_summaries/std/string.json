{
  "doc": " The `string` module defines the `String` type which represents UTF8 encoded\n strings.",
  "immediate_dependencies": [
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "ascii"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "option"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "vector"
    }
  ],
  "attributes": [],
  "functions": {
    "utf8": {
      "source_index": 0,
      "index": 0,
      "doc": " Creates a new string from a sequence of bytes. Aborts if the bytes do\n not represent valid utf8.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bytes",
          "type_": {
            "vector": "u8"
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "from_ascii": {
      "source_index": 1,
      "index": 1,
      "doc": " Convert an ASCII string to a UTF8 string",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "s",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "ascii"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "to_ascii": {
      "source_index": 2,
      "index": 2,
      "doc": " Convert an UTF8 string to an ASCII string.\n Aborts if `s` is not valid ASCII",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "s",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "ascii"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "try_utf8": {
      "source_index": 3,
      "index": 3,
      "doc": " Tries to create a new string from a sequence of bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bytes",
          "type_": {
            "vector": "u8"
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000001",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ]
    },
    "as_bytes": {
      "source_index": 4,
      "index": 4,
      "doc": " Returns a reference to the underlying byte vector.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "s",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000001",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "vector": "u8"
            }
          ]
        }
      ]
    },
    "into_bytes": {
      "source_index": 5,
      "index": 5,
      "doc": " Unpack the `string` to get its underlying bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "s",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "vector": "u8"
        }
      ]
    },
    "is_empty": {
      "source_index": 6,
      "index": 6,
      "doc": " Checks whether this string is empty.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "s",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000001",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "length": {
      "source_index": 7,
      "index": 7,
      "doc": " Returns the length of this string, in bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "s",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000001",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "append": {
      "source_index": 8,
      "index": 8,
      "doc": " Appends a string.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "s",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000001",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "r",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "append_utf8": {
      "source_index": 9,
      "index": 9,
      "doc": " Appends bytes which must be in valid utf8 format.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "s",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000001",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "bytes",
          "type_": {
            "vector": "u8"
          }
        }
      ],
      "return_": []
    },
    "insert": {
      "source_index": 10,
      "index": 10,
      "doc": " Insert the other string at the byte index in given string. The index\n must be at a valid utf8 char boundary.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "s",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000001",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "at",
          "type_": "u64"
        },
        {
          "name": "o",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "substring": {
      "source_index": 11,
      "index": 11,
      "doc": " Returns a sub-string using the given byte indices, where `i` is the first\n byte position and `j` is the start of the first byte not included (or the\n length of the string). The indices must be at valid utf8 char boundaries,\n guaranteeing that the result is valid utf8.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "s",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000001",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "i",
          "type_": "u64"
        },
        {
          "name": "j",
          "type_": "u64"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "index_of": {
      "source_index": 12,
      "index": 12,
      "doc": " Computes the index of the first occurrence of a string. Returns `s.length()`\n if no occurrence found.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "s",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000001",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "r",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000001",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "internal_check_utf8": {
      "source_index": 13,
      "index": 13,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "v",
          "type_": {
            "Reference": [
              false,
              {
                "vector": "u8"
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "internal_is_char_boundary": {
      "source_index": 14,
      "index": 14,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "v",
          "type_": {
            "Reference": [
              false,
              {
                "vector": "u8"
              }
            ]
          }
        },
        {
          "name": "i",
          "type_": "u64"
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "internal_sub_string": {
      "source_index": 15,
      "index": 15,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "v",
          "type_": {
            "Reference": [
              false,
              {
                "vector": "u8"
              }
            ]
          }
        },
        {
          "name": "i",
          "type_": "u64"
        },
        {
          "name": "j",
          "type_": "u64"
        }
      ],
      "return_": [
        {
          "vector": "u8"
        }
      ]
    },
    "internal_index_of": {
      "source_index": 16,
      "index": 16,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "v",
          "type_": {
            "Reference": [
              false,
              {
                "vector": "u8"
              }
            ]
          }
        },
        {
          "name": "r",
          "type_": {
            "Reference": [
              false,
              {
                "vector": "u8"
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "bytes": {
      "source_index": 17,
      "index": 17,
      "doc": null,
      "attributes": [
        {
          "Parameterized": [
            "deprecated",
            [
              {
                "Assigned": [
                  "note",
                  "Use `std::string::as_bytes` instead."
                ]
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "s",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000001",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "vector": "u8"
            }
          ]
        }
      ]
    },
    "sub_string": {
      "source_index": 18,
      "index": 18,
      "doc": null,
      "attributes": [
        {
          "Parameterized": [
            "deprecated",
            [
              {
                "Assigned": [
                  "note",
                  "Use `std::string::substring` instead."
                ]
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "s",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000001",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "i",
          "type_": "u64"
        },
        {
          "name": "j",
          "type_": "u64"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    }
  },
  "structs": {
    "String": {
      "index": 0,
      "doc": " A `String` holds a sequence of bytes which is guaranteed to be in utf8\n format.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop",
        "Store"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "bytes": {
            "index": 0,
            "doc": null,
            "type_": {
              "vector": "u8"
            }
          }
        }
      }
    }
  },
  "enums": {}
}