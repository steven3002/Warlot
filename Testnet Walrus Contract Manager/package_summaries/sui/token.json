{
  "doc": " The Token module which implements a Closed Loop Token with a configurable\n policy. The policy is defined by a set of rules that must be satisfied for\n an action to be performed on the token.\n\n The module is designed to be used with a `TreasuryCap` to allow for minting\n and burning of the `Token`s. And can act as a replacement / extension or a\n companion to existing open-loop (`Coin`) systems.\n\n ```\n Module:      sui::balance       sui::coin             sui::token\n Main type:   Balance<T>         Coin<T>               Token<T>\n Capability:  Supply<T>  <---->  TreasuryCap<T> <----> TreasuryCap<T>\n Abilities:   store              key + store           key\n ```\n\n The Token system allows for fine-grained control over the actions performed\n on the token. And hence it is highly suitable for applications that require\n control over the currency which a simple open-loop system can't provide.",
  "immediate_dependencies": [
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "option"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "string"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "type_name"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "balance"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "coin"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "dynamic_field"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "event"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "object"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "transfer"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "tx_context"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "vec_map"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "vec_set"
    }
  ],
  "attributes": [],
  "functions": {
    "new_policy": {
      "source_index": 0,
      "index": 0,
      "doc": " Create a new `TokenPolicy` and a matching `TokenPolicyCap`.\n The `TokenPolicy` must then be shared using the `share_policy` method.\n\n `TreasuryCap` guarantees full ownership over the currency, and is unique,\n hence it is safe to use it for authorization.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "_treasury_cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "TreasuryCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "token"
            },
            "name": "TokenPolicy",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        },
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "token"
            },
            "name": "TokenPolicyCap",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "share_policy": {
      "source_index": 1,
      "index": 1,
      "doc": " Share the `TokenPolicy`. Due to `key`-only restriction, it must be\n shared after initialization.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "policy",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "token"
              },
              "name": "TokenPolicy",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        }
      ],
      "return_": []
    },
    "transfer": {
      "source_index": 2,
      "index": 2,
      "doc": " Transfer a `Token` to a `recipient`. Creates an `ActionRequest` for the\n \"transfer\" action. The `ActionRequest` contains the `recipient` field\n to be used in verification.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "t",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "token"
              },
              "name": "Token",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        },
        {
          "name": "recipient",
          "type_": "address"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "token"
            },
            "name": "ActionRequest",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "spend": {
      "source_index": 3,
      "index": 3,
      "doc": " Spend a `Token` by unwrapping it and storing the `Balance` in the\n `ActionRequest` for the \"spend\" action. The `ActionRequest` contains\n the `spent_balance` field to be used in verification.\n\n Spend action requires `confirm_request_mut` to be called to confirm the\n request and join the spent balance with the `TokenPolicy.spent_balance`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "t",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "token"
              },
              "name": "Token",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "token"
            },
            "name": "ActionRequest",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "to_coin": {
      "source_index": 4,
      "index": 4,
      "doc": " Convert `Token` into an open `Coin`. Creates an `ActionRequest` for the\n \"to_coin\" action.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "t",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "token"
              },
              "name": "Token",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "Coin",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        },
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "token"
            },
            "name": "ActionRequest",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "from_coin": {
      "source_index": 5,
      "index": 5,
      "doc": " Convert an open `Coin` into a `Token`. Creates an `ActionRequest` for\n the \"from_coin\" action.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "coin",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "coin"
              },
              "name": "Coin",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "token"
            },
            "name": "Token",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        },
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "token"
            },
            "name": "ActionRequest",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "join": {
      "source_index": 6,
      "index": 6,
      "doc": " Join two `Token`s into one, always available.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "token",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "Token",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "another",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "token"
              },
              "name": "Token",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        }
      ],
      "return_": []
    },
    "split": {
      "source_index": 7,
      "index": 7,
      "doc": " Split a `Token` with `amount`.\n Aborts if the `Token.balance` is lower than `amount`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "token",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "Token",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "amount",
          "type_": "u64"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "token"
            },
            "name": "Token",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "zero": {
      "source_index": 8,
      "index": 8,
      "doc": " Create a zero `Token`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "token"
            },
            "name": "Token",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "destroy_zero": {
      "source_index": 9,
      "index": 9,
      "doc": " Destroy an empty `Token`, fails if the balance is non-zero.\n Aborts if the `Token.balance` is not zero.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "token",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "token"
              },
              "name": "Token",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        }
      ],
      "return_": []
    },
    "keep": {
      "source_index": 10,
      "index": 10,
      "doc": " Transfer the `Token` to the transaction sender.",
      "attributes": [
        {
          "Parameterized": [
            "allow",
            [
              {
                "Parameterized": [
                  "lint",
                  [
                    {
                      "Name": "self_transfer"
                    }
                  ]
                ]
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "token",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "token"
              },
              "name": "Token",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "new_request": {
      "source_index": 11,
      "index": 11,
      "doc": " Create a new `ActionRequest`.\n Publicly available method to allow for custom actions.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "name",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "amount",
          "type_": "u64"
        },
        {
          "name": "recipient",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "option"
              },
              "name": "Option",
              "type_arguments": [
                "address"
              ]
            }
          }
        },
        {
          "name": "spent_balance",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "option"
              },
              "name": "Option",
              "type_arguments": [
                {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000002",
                      "name": "balance"
                    },
                    "name": "Balance",
                    "type_arguments": [
                      {
                        "NamedTypeParameter": "T"
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "token"
            },
            "name": "ActionRequest",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "confirm_request": {
      "source_index": 12,
      "index": 12,
      "doc": " Confirm the request against the `TokenPolicy` and return the parameters\n of the request: (Name, Amount, Sender, Recipient).\n\n Cannot be used for `spend` and similar actions that deliver `spent_balance`\n to the `TokenPolicy`. For those actions use `confirm_request_mut`.\n\n Aborts if:\n - the action is not allowed (missing record in `rules`)\n - action contains `spent_balance` (use `confirm_request_mut`)\n - the `ActionRequest` does not meet the `TokenPolicy` rules for the action",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "policy",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicy",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "request",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "token"
              },
              "name": "ActionRequest",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        },
        {
          "name": "_ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        },
        "u64",
        "address",
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              "address"
            ]
          }
        }
      ]
    },
    "confirm_request_mut": {
      "source_index": 13,
      "index": 13,
      "doc": " Confirm the request against the `TokenPolicy` and return the parameters\n of the request: (Name, Amount, Sender, Recipient).\n\n Unlike `confirm_request` this function requires mutable access to the\n `TokenPolicy` and must be used on `spend` action. After dealing with the\n spent balance it calls `confirm_request` internally.\n\n See `confirm_request` for the list of abort conditions.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "policy",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicy",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "request",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "token"
              },
              "name": "ActionRequest",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        },
        "u64",
        "address",
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              "address"
            ]
          }
        }
      ]
    },
    "confirm_with_policy_cap": {
      "source_index": 14,
      "index": 14,
      "doc": " Confirm an `ActionRequest` as the `TokenPolicyCap` owner. This function\n allows `TokenPolicy` owner to perform Capability-gated actions ignoring\n the ruleset specified in the `TokenPolicy`.\n\n Aborts if request contains `spent_balance` due to inability of the\n `TokenPolicyCap` to decrease supply. For scenarios like this a\n `TreasuryCap` is required (see `confirm_with_treasury_cap`).",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "_policy_cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicyCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "request",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "token"
              },
              "name": "ActionRequest",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        },
        {
          "name": "_ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        },
        "u64",
        "address",
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              "address"
            ]
          }
        }
      ]
    },
    "confirm_with_treasury_cap": {
      "source_index": 15,
      "index": 15,
      "doc": " Confirm an `ActionRequest` as the `TreasuryCap` owner. This function\n allows `TreasuryCap` owner to perform Capability-gated actions ignoring\n the ruleset specified in the `TokenPolicy`.\n\n Unlike `confirm_with_policy_cap` this function allows `spent_balance`\n to be consumed, decreasing the `total_supply` of the `Token`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "treasury_cap",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "TreasuryCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "request",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "token"
              },
              "name": "ActionRequest",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        },
        {
          "name": "_ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        },
        "u64",
        "address",
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              "address"
            ]
          }
        }
      ]
    },
    "add_approval": {
      "source_index": 16,
      "index": 16,
      "doc": " Add an \"approval\" to the `ActionRequest` by providing a Witness.\n Intended to be used by Rules to add their own approvals, however, can\n be used to add arbitrary approvals to the request (not only the ones\n required by the `TokenPolicy`).",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        },
        {
          "name": "W",
          "constraints": [
            "Drop"
          ]
        }
      ],
      "parameters": [
        {
          "name": "_t",
          "type_": {
            "NamedTypeParameter": "W"
          }
        },
        {
          "name": "request",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "ActionRequest",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "_ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "add_rule_config": {
      "source_index": 17,
      "index": 17,
      "doc": " Add a `Config` for a `Rule` in the `TokenPolicy`. Rule configuration is\n independent from the `TokenPolicy.rules` and needs to be managed by the\n Rule itself. Configuration is stored per `Rule` and not per `Rule` per\n `Action` to allow reuse in different actions.\n\n - Rule witness guarantees that the `Config` is approved by the Rule.\n - `TokenPolicyCap` guarantees that the `Config` setup is initiated by\n the `TokenPolicy` owner.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        },
        {
          "name": "Rule",
          "constraints": [
            "Drop"
          ]
        },
        {
          "name": "Config",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "_rule",
          "type_": {
            "NamedTypeParameter": "Rule"
          }
        },
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicy",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicyCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "config",
          "type_": {
            "NamedTypeParameter": "Config"
          }
        },
        {
          "name": "_ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "rule_config": {
      "source_index": 18,
      "index": 18,
      "doc": " Get a `Config` for a `Rule` in the `TokenPolicy`. Requires `Rule`\n witness, hence can only be read by the `Rule` itself. This requirement\n guarantees safety of the stored `Config` and allows for simpler dynamic\n field management inside the Rule Config (custom type keys are not needed\n for access gating).\n\n Aborts if the Config is not present.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        },
        {
          "name": "Rule",
          "constraints": [
            "Drop"
          ]
        },
        {
          "name": "Config",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "_rule",
          "type_": {
            "NamedTypeParameter": "Rule"
          }
        },
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicy",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "NamedTypeParameter": "Config"
            }
          ]
        }
      ]
    },
    "rule_config_mut": {
      "source_index": 19,
      "index": 19,
      "doc": " Get mutable access to the `Config` for a `Rule` in the `TokenPolicy`.\n Requires `Rule` witness, hence can only be read by the `Rule` itself,\n as well as `TokenPolicyCap` to guarantee that the `TokenPolicy` owner\n is the one who initiated the `Config` modification.\n\n Aborts if:\n - the Config is not present\n - `TokenPolicyCap` is not matching the `TokenPolicy`",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        },
        {
          "name": "Rule",
          "constraints": [
            "Drop"
          ]
        },
        {
          "name": "Config",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "_rule",
          "type_": {
            "NamedTypeParameter": "Rule"
          }
        },
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicy",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicyCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            true,
            {
              "NamedTypeParameter": "Config"
            }
          ]
        }
      ]
    },
    "remove_rule_config": {
      "source_index": 20,
      "index": 20,
      "doc": " Remove a `Config` for a `Rule` in the `TokenPolicy`.\n Unlike the `add_rule_config`, this function does not require a `Rule`\n witness, hence can be performed by the `TokenPolicy` owner on their own.\n\n Rules need to make sure that the `Config` is present when performing\n verification of the `ActionRequest`.\n\n Aborts if:\n - the Config is not present\n - `TokenPolicyCap` is not matching the `TokenPolicy`",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        },
        {
          "name": "Rule",
          "constraints": []
        },
        {
          "name": "Config",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicy",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicyCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "_ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "NamedTypeParameter": "Config"
        }
      ]
    },
    "has_rule_config": {
      "source_index": 21,
      "index": 21,
      "doc": " Check if a config for a `Rule` is set in the `TokenPolicy` without\n checking the type of the `Config`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        },
        {
          "name": "Rule",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicy",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "has_rule_config_with_type": {
      "source_index": 22,
      "index": 22,
      "doc": " Check if a `Config` for a `Rule` is set in the `TokenPolicy` and that\n it matches the type provided.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        },
        {
          "name": "Rule",
          "constraints": []
        },
        {
          "name": "Config",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicy",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "allow": {
      "source_index": 23,
      "index": 23,
      "doc": " Allows an `action` to be performed on the `Token` freely by adding an\n empty set of `Rules` for the `action`.\n\n Aborts if the `TokenPolicyCap` is not matching the `TokenPolicy`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicy",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicyCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "action",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "_ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "disallow": {
      "source_index": 24,
      "index": 24,
      "doc": " Completely disallows an `action` on the `Token` by removing the record\n from the `TokenPolicy.rules`.\n\n Aborts if the `TokenPolicyCap` is not matching the `TokenPolicy`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicy",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicyCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "action",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "_ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "add_rule_for_action": {
      "source_index": 25,
      "index": 25,
      "doc": " Adds a Rule for an action with `name` in the `TokenPolicy`.\n\n Aborts if the `TokenPolicyCap` is not matching the `TokenPolicy`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        },
        {
          "name": "Rule",
          "constraints": [
            "Drop"
          ]
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicy",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicyCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "action",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "remove_rule_for_action": {
      "source_index": 26,
      "index": 26,
      "doc": " Removes a rule for an action with `name` in the `TokenPolicy`. Returns\n the config object to be handled by the sender (or a Rule itself).\n\n Aborts if the `TokenPolicyCap` is not matching the `TokenPolicy`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        },
        {
          "name": "Rule",
          "constraints": [
            "Drop"
          ]
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicy",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicyCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "action",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "_ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "mint": {
      "source_index": 27,
      "index": 27,
      "doc": " Mint a `Token` with a given `amount` using the `TreasuryCap`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "cap",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "TreasuryCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "amount",
          "type_": "u64"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "token"
            },
            "name": "Token",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "burn": {
      "source_index": 28,
      "index": 28,
      "doc": " Burn a `Token` using the `TreasuryCap`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "cap",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "TreasuryCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "token",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "token"
              },
              "name": "Token",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        }
      ],
      "return_": []
    },
    "flush": {
      "source_index": 29,
      "index": 29,
      "doc": " Flush the `TokenPolicy.spent_balance` into the `TreasuryCap`. This\n action is only available to the `TreasuryCap` owner.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicy",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "TreasuryCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "_ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "is_allowed": {
      "source_index": 30,
      "index": 30,
      "doc": " Check whether an action is present in the rules VecMap.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicy",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "action",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000001",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "rules": {
      "source_index": 31,
      "index": 31,
      "doc": " Returns the rules required for a specific action.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicy",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "action",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000001",
                    "name": "string"
                  },
                  "name": "String",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "vec_set"
            },
            "name": "VecSet",
            "type_arguments": [
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000001",
                    "name": "type_name"
                  },
                  "name": "TypeName",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ]
    },
    "spent_balance": {
      "source_index": 32,
      "index": 32,
      "doc": " Returns the `spent_balance` of the `TokenPolicy`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "TokenPolicy",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "value": {
      "source_index": 33,
      "index": 33,
      "doc": " Returns the `balance` of the `Token`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "t",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "Token",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "transfer_action": {
      "source_index": 34,
      "index": 34,
      "doc": " Name of the Transfer action.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "spend_action": {
      "source_index": 35,
      "index": 35,
      "doc": " Name of the `Spend` action.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "to_coin_action": {
      "source_index": 36,
      "index": 36,
      "doc": " Name of the `ToCoin` action.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "from_coin_action": {
      "source_index": 37,
      "index": 37,
      "doc": " Name of the `FromCoin` action.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "action": {
      "source_index": 38,
      "index": 38,
      "doc": " The Action in the `ActionRequest`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "ActionRequest",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "amount": {
      "source_index": 39,
      "index": 39,
      "doc": " Amount of the `ActionRequest`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "ActionRequest",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "sender": {
      "source_index": 40,
      "index": 40,
      "doc": " Sender of the `ActionRequest`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "ActionRequest",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "address"
      ]
    },
    "recipient": {
      "source_index": 41,
      "index": 41,
      "doc": " Recipient of the `ActionRequest`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "ActionRequest",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              "address"
            ]
          }
        }
      ]
    },
    "approvals": {
      "source_index": 42,
      "index": 42,
      "doc": " Approvals of the `ActionRequest`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "ActionRequest",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "vec_set"
            },
            "name": "VecSet",
            "type_arguments": [
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000001",
                    "name": "type_name"
                  },
                  "name": "TypeName",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ]
    },
    "spent": {
      "source_index": 43,
      "index": 43,
      "doc": " Burned balance of the `ActionRequest`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "token"
                  },
                  "name": "ActionRequest",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              "u64"
            ]
          }
        }
      ]
    },
    "key": {
      "source_index": 44,
      "index": 44,
      "doc": " Create a new `RuleKey` for a `Rule`. The `is_protected` field is kept\n for potential future use, if Rules were to have a freely modifiable\n storage as addition / replacement for the `Config` system.\n\n The goal of `is_protected` is to potentially allow Rules store a mutable\n version of their configuration and mutate state on user action.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [
        {
          "name": "Rule",
          "constraints": []
        }
      ],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "token"
            },
            "name": "RuleKey",
            "type_arguments": [
              {
                "NamedTypeParameter": "Rule"
              }
            ]
          }
        }
      ]
    }
  },
  "structs": {
    "Token": {
      "index": 0,
      "doc": " A single `Token` with `Balance` inside. Can only be owned by an address,\n and actions performed on it must be confirmed in a matching `TokenPolicy`.",
      "attributes": [],
      "abilities": [
        "Key"
      ],
      "type_parameters": [
        {
          "phantom": true,
          "name": "T",
          "constraints": []
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "UID",
                "type_arguments": []
              }
            }
          },
          "balance": {
            "index": 1,
            "doc": " The Balance of the `Token`.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "balance"
                },
                "name": "Balance",
                "type_arguments": [
                  {
                    "TypeParameter": 0
                  }
                ]
              }
            }
          }
        }
      }
    },
    "TokenPolicyCap": {
      "index": 1,
      "doc": " A Capability that manages a single `TokenPolicy` specified in the `for`\n field. Created together with `TokenPolicy` in the `new` function.",
      "attributes": [],
      "abilities": [
        "Key",
        "Store"
      ],
      "type_parameters": [
        {
          "phantom": true,
          "name": "T",
          "constraints": []
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "UID",
                "type_arguments": []
              }
            }
          },
          "for": {
            "index": 1,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "ID",
                "type_arguments": []
              }
            }
          }
        }
      }
    },
    "TokenPolicy": {
      "index": 2,
      "doc": " `TokenPolicy` represents a set of rules that define what actions can be\n performed on a `Token` and which `Rules` must be satisfied for the\n action to succeed.\n\n - For the sake of availability, `TokenPolicy` is a `key`-only object.\n - Each `TokenPolicy` is managed by a matching `TokenPolicyCap`.\n - For an action to become available, there needs to be a record in the\n `rules` VecMap. To allow an action to be performed freely, there's an\n `allow` function that can be called by the `TokenPolicyCap` owner.",
      "attributes": [],
      "abilities": [
        "Key"
      ],
      "type_parameters": [
        {
          "phantom": true,
          "name": "T",
          "constraints": []
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "UID",
                "type_arguments": []
              }
            }
          },
          "spent_balance": {
            "index": 1,
            "doc": " The balance that is effectively spent by the user on the \"spend\"\n action. However, actual decrease of the supply can only be done by\n the `TreasuryCap` owner when `flush` is called.\n\n This balance is effectively spent and cannot be accessed by anyone\n but the `TreasuryCap` owner.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "balance"
                },
                "name": "Balance",
                "type_arguments": [
                  {
                    "TypeParameter": 0
                  }
                ]
              }
            }
          },
          "rules": {
            "index": 2,
            "doc": " The set of rules that define what actions can be performed on the\n token. For each \"action\" there's a set of Rules that must be\n satisfied for the `ActionRequest` to be confirmed.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "vec_map"
                },
                "name": "VecMap",
                "type_arguments": [
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000001",
                        "name": "string"
                      },
                      "name": "String",
                      "type_arguments": []
                    }
                  },
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000002",
                        "name": "vec_set"
                      },
                      "name": "VecSet",
                      "type_arguments": [
                        {
                          "Datatype": {
                            "module": {
                              "address": "0000000000000000000000000000000000000000000000000000000000000001",
                              "name": "type_name"
                            },
                            "name": "TypeName",
                            "type_arguments": []
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "ActionRequest": {
      "index": 3,
      "doc": " A request to perform an \"Action\" on a token. Stores the information\n about the action to be performed and must be consumed by the `confirm_request`\n or `confirm_request_mut` functions when the Rules are satisfied.",
      "attributes": [],
      "abilities": [],
      "type_parameters": [
        {
          "phantom": true,
          "name": "T",
          "constraints": []
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "name": {
            "index": 0,
            "doc": " Name of the Action to look up in the Policy. Name can be one of the\n default actions: `transfer`, `spend`, `to_coin`, `from_coin` or a\n custom action.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "amount": {
            "index": 1,
            "doc": " Amount is present in all of the txs",
            "type_": "u64"
          },
          "sender": {
            "index": 2,
            "doc": " Sender is a permanent field always",
            "type_": "address"
          },
          "recipient": {
            "index": 3,
            "doc": " Recipient is only available in `transfer` action.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  "address"
                ]
              }
            }
          },
          "spent_balance": {
            "index": 4,
            "doc": " The balance to be \"spent\" in the `TokenPolicy`, only available\n in the `spend` action.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000002",
                        "name": "balance"
                      },
                      "name": "Balance",
                      "type_arguments": [
                        {
                          "TypeParameter": 0
                        }
                      ]
                    }
                  }
                ]
              }
            }
          },
          "approvals": {
            "index": 5,
            "doc": " Collected approvals (stamps) from completed `Rules`. They're matched\n against `TokenPolicy.rules` to determine if the request can be\n confirmed.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "vec_set"
                },
                "name": "VecSet",
                "type_arguments": [
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000001",
                        "name": "type_name"
                      },
                      "name": "TypeName",
                      "type_arguments": []
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "RuleKey": {
      "index": 4,
      "doc": " Dynamic field key for the `TokenPolicy` to store the `Config` for a\n specific action `Rule`. There can be only one configuration per\n `Rule` per `TokenPolicy`.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop",
        "Store"
      ],
      "type_parameters": [
        {
          "phantom": true,
          "name": "T",
          "constraints": []
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "is_protected": {
            "index": 0,
            "doc": null,
            "type_": "bool"
          }
        }
      }
    },
    "TokenPolicyCreated": {
      "index": 5,
      "doc": " An event emitted when a `TokenPolicy` is created and shared. Because\n `TokenPolicy` can only be shared (and potentially frozen in the future),\n we emit this event in the `share_policy` function and mark it as mutable.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [
        {
          "phantom": true,
          "name": "T",
          "constraints": []
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": " ID of the `TokenPolicy` that was created.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "ID",
                "type_arguments": []
              }
            }
          },
          "is_mutable": {
            "index": 1,
            "doc": " Whether the `TokenPolicy` is \"shared\" (mutable) or \"frozen\"\n (immutable) - TBD.",
            "type_": "bool"
          }
        }
      }
    }
  },
  "enums": {}
}