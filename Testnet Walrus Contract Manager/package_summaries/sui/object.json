{
  "doc": " Sui object identifiers",
  "immediate_dependencies": [
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "bcs"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "address"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "tx_context"
    }
  ],
  "attributes": [],
  "functions": {
    "id_to_bytes": {
      "source_index": 0,
      "index": 0,
      "doc": " Get the raw bytes of a `ID`",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "id",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "object"
                  },
                  "name": "ID",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": "u8"
        }
      ]
    },
    "id_to_address": {
      "source_index": 1,
      "index": 1,
      "doc": " Get the inner bytes of `id` as an address.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "id",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "object"
                  },
                  "name": "ID",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "address"
      ]
    },
    "id_from_bytes": {
      "source_index": 2,
      "index": 2,
      "doc": " Make an `ID` from raw bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bytes",
          "type_": {
            "vector": "u8"
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "ID",
            "type_arguments": []
          }
        }
      ]
    },
    "id_from_address": {
      "source_index": 3,
      "index": 3,
      "doc": " Make an `ID` from an address.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bytes",
          "type_": "address"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "ID",
            "type_arguments": []
          }
        }
      ]
    },
    "sui_system_state": {
      "source_index": 4,
      "index": 4,
      "doc": " Create the `UID` for the singleton `SuiSystemState` object.\n This should only be called once from `sui_system`.",
      "attributes": [
        {
          "Parameterized": [
            "allow",
            [
              {
                "Name": "unused_function"
              }
            ]
          ]
        }
      ],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "UID",
            "type_arguments": []
          }
        }
      ]
    },
    "clock": {
      "source_index": 5,
      "index": 5,
      "doc": " Create the `UID` for the singleton `Clock` object.\n This should only be called once from `clock`.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "UID",
            "type_arguments": []
          }
        }
      ]
    },
    "authenticator_state": {
      "source_index": 6,
      "index": 6,
      "doc": " Create the `UID` for the singleton `AuthenticatorState` object.\n This should only be called once from `authenticator_state`.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "UID",
            "type_arguments": []
          }
        }
      ]
    },
    "randomness_state": {
      "source_index": 7,
      "index": 7,
      "doc": " Create the `UID` for the singleton `Random` object.\n This should only be called once from `random`.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "UID",
            "type_arguments": []
          }
        }
      ]
    },
    "sui_deny_list_object_id": {
      "source_index": 8,
      "index": 8,
      "doc": " Create the `UID` for the singleton `DenyList` object.\n This should only be called once from `deny_list`.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "UID",
            "type_arguments": []
          }
        }
      ]
    },
    "bridge": {
      "source_index": 9,
      "index": 9,
      "doc": " Create the `UID` for the singleton `Bridge` object.\n This should only be called once from `bridge`.",
      "attributes": [
        {
          "Parameterized": [
            "allow",
            [
              {
                "Name": "unused_function"
              }
            ]
          ]
        }
      ],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "UID",
            "type_arguments": []
          }
        }
      ]
    },
    "uid_as_inner": {
      "source_index": 10,
      "index": 10,
      "doc": " Get the inner `ID` of `uid`",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "uid",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "object"
                  },
                  "name": "UID",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "ID",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "uid_to_inner": {
      "source_index": 11,
      "index": 11,
      "doc": " Get the raw bytes of a `uid`'s inner `ID`",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "uid",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "object"
                  },
                  "name": "UID",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "ID",
            "type_arguments": []
          }
        }
      ]
    },
    "uid_to_bytes": {
      "source_index": 12,
      "index": 12,
      "doc": " Get the raw bytes of a `UID`",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "uid",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "object"
                  },
                  "name": "UID",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": "u8"
        }
      ]
    },
    "uid_to_address": {
      "source_index": 13,
      "index": 13,
      "doc": " Get the inner bytes of `id` as an address.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "uid",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "object"
                  },
                  "name": "UID",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "address"
      ]
    },
    "new": {
      "source_index": 14,
      "index": 14,
      "doc": " Create a new object. Returns the `UID` that must be stored in a Sui object.\n This is the only way to create `UID`s.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "UID",
            "type_arguments": []
          }
        }
      ]
    },
    "delete": {
      "source_index": 15,
      "index": 15,
      "doc": " Delete the object and its `UID`. This is the only way to eliminate a `UID`.\n This exists to inform Sui of object deletions. When an object\n gets unpacked, the programmer will have to do something with its\n `UID`. The implementation of this function emits a deleted\n system event so Sui knows to process the object deletion",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "UID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "id": {
      "source_index": 16,
      "index": 16,
      "doc": " Get the underlying `ID` of `obj`",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": [
            "Key"
          ]
        }
      ],
      "parameters": [
        {
          "name": "obj",
          "type_": {
            "Reference": [
              false,
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "ID",
            "type_arguments": []
          }
        }
      ]
    },
    "borrow_id": {
      "source_index": 17,
      "index": 17,
      "doc": " Borrow the underlying `ID` of `obj`",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": [
            "Key"
          ]
        }
      ],
      "parameters": [
        {
          "name": "obj",
          "type_": {
            "Reference": [
              false,
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "ID",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "id_bytes": {
      "source_index": 18,
      "index": 18,
      "doc": " Get the raw bytes for the underlying `ID` of `obj`",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": [
            "Key"
          ]
        }
      ],
      "parameters": [
        {
          "name": "obj",
          "type_": {
            "Reference": [
              false,
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": "u8"
        }
      ]
    },
    "id_address": {
      "source_index": 19,
      "index": 19,
      "doc": " Get the inner bytes for the underlying `ID` of `obj`",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": [
            "Key"
          ]
        }
      ],
      "parameters": [
        {
          "name": "obj",
          "type_": {
            "Reference": [
              false,
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ],
      "return_": [
        "address"
      ]
    },
    "borrow_uid": {
      "source_index": 20,
      "index": 20,
      "doc": " Get the `UID` for `obj`.\n Safe because Sui has an extra bytecode verifier pass that forces every struct with\n the `key` ability to have a distinguished `UID` field.\n Cannot be made public as the access to `UID` for a given object must be privileged, and\n restrictable in the object's module.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": [
            "Key"
          ]
        }
      ],
      "parameters": [
        {
          "name": "obj",
          "type_": {
            "Reference": [
              false,
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "UID",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "new_uid_from_hash": {
      "source_index": 21,
      "index": 21,
      "doc": " Generate a new UID specifically used for creating a UID from a hash",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bytes",
          "type_": "address"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "UID",
            "type_arguments": []
          }
        }
      ]
    },
    "delete_impl": {
      "source_index": 22,
      "index": 22,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "id",
          "type_": "address"
        }
      ],
      "return_": []
    },
    "record_new_uid": {
      "source_index": 23,
      "index": 23,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "id",
          "type_": "address"
        }
      ],
      "return_": []
    }
  },
  "structs": {
    "ID": {
      "index": 0,
      "doc": " An object ID. This is used to reference Sui Objects.\n This is *not* guaranteed to be globally unique--anyone can create an `ID` from a `UID` or\n from an object, and ID's can be freely copied and dropped.\n Here, the values are not globally unique because there can be multiple values of type `ID`\n with the same underlying bytes. For example, `object::id(&obj)` can be called as many times\n as you want for a given `obj`, and each `ID` value will be identical.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop",
        "Store"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "bytes": {
            "index": 0,
            "doc": null,
            "type_": "address"
          }
        }
      }
    },
    "UID": {
      "index": 1,
      "doc": " Globally unique IDs that define an object's ID in storage. Any Sui Object, that is a struct\n with the `key` ability, must have `id: UID` as its first field.\n These are globally unique in the sense that no two values of type `UID` are ever equal, in\n other words for any two values `id1: UID` and `id2: UID`, `id1` != `id2`.\n This is a privileged type that can only be derived from a `TxContext`.\n `UID` doesn't have the `drop` ability, so deleting a `UID` requires a call to `delete`.",
      "attributes": [],
      "abilities": [
        "Store"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "ID",
                "type_arguments": []
              }
            }
          }
        }
      }
    }
  },
  "enums": {}
}