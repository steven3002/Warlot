{
  "doc": " A storable handler for Balances in general. Is used in the `Coin`\n module to allow balance operations and can be used to implement\n custom coins with `Supply` and `Balance`s.",
  "immediate_dependencies": [
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "ascii"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "type_name"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "tx_context"
    }
  ],
  "attributes": [],
  "functions": {
    "value": {
      "source_index": 0,
      "index": 0,
      "doc": " Get the amount stored in a `Balance`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "balance"
                  },
                  "name": "Balance",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "supply_value": {
      "source_index": 1,
      "index": 1,
      "doc": " Get the `Supply` value.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "supply",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "balance"
                  },
                  "name": "Supply",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "create_supply": {
      "source_index": 2,
      "index": 2,
      "doc": " Create a new supply for type T.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": [
            "Drop"
          ]
        }
      ],
      "parameters": [
        {
          "name": "_",
          "type_": {
            "NamedTypeParameter": "T"
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "balance"
            },
            "name": "Supply",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "increase_supply": {
      "source_index": 3,
      "index": 3,
      "doc": " Increase supply by `value` and create a new `Balance<T>` with this value.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "balance"
                  },
                  "name": "Supply",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "value",
          "type_": "u64"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "balance"
            },
            "name": "Balance",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "decrease_supply": {
      "source_index": 4,
      "index": 4,
      "doc": " Burn a Balance<T> and decrease Supply<T>.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "balance"
                  },
                  "name": "Supply",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "balance",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "balance"
              },
              "name": "Balance",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "zero": {
      "source_index": 5,
      "index": 5,
      "doc": " Create a zero `Balance` for type `T`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "balance"
            },
            "name": "Balance",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "join": {
      "source_index": 6,
      "index": 6,
      "doc": " Join two balances together.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "balance"
                  },
                  "name": "Balance",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "balance",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "balance"
              },
              "name": "Balance",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "split": {
      "source_index": 7,
      "index": 7,
      "doc": " Split a `Balance` and take a sub balance from it.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "balance"
                  },
                  "name": "Balance",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "value",
          "type_": "u64"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "balance"
            },
            "name": "Balance",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "withdraw_all": {
      "source_index": 8,
      "index": 8,
      "doc": " Withdraw all balance. After this the remaining balance must be 0.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "balance"
                  },
                  "name": "Balance",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "balance"
            },
            "name": "Balance",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "destroy_zero": {
      "source_index": 9,
      "index": 9,
      "doc": " Destroy a zero `Balance`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "balance",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "balance"
              },
              "name": "Balance",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        }
      ],
      "return_": []
    },
    "create_staking_rewards": {
      "source_index": 10,
      "index": 10,
      "doc": " CAUTION: this function creates a `Balance` without increasing the supply.\n It should only be called by the epoch change system txn to create staking rewards,\n and nowhere else.",
      "attributes": [
        {
          "Parameterized": [
            "allow",
            [
              {
                "Name": "unused_function"
              }
            ]
          ]
        }
      ],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "value",
          "type_": "u64"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "balance"
            },
            "name": "Balance",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "destroy_storage_rebates": {
      "source_index": 11,
      "index": 11,
      "doc": " CAUTION: this function destroys a `Balance` without decreasing the supply.\n It should only be called by the epoch change system txn to destroy storage rebates,\n and nowhere else.",
      "attributes": [
        {
          "Parameterized": [
            "allow",
            [
              {
                "Name": "unused_function"
              }
            ]
          ]
        }
      ],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "balance"
              },
              "name": "Balance",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "destroy_supply": {
      "source_index": 12,
      "index": 12,
      "doc": " Destroy a `Supply` preventing any further minting and burning.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "balance"
              },
              "name": "Supply",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        }
      ],
      "return_": [
        "u64"
      ]
    }
  },
  "structs": {
    "Supply": {
      "index": 0,
      "doc": " A Supply of T. Used for minting and burning.\n Wrapped into a `TreasuryCap` in the `Coin` module.",
      "attributes": [],
      "abilities": [
        "Store"
      ],
      "type_parameters": [
        {
          "phantom": true,
          "name": "T",
          "constraints": []
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "value": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    },
    "Balance": {
      "index": 1,
      "doc": " Storable balance - an inner struct of a Coin type.\n Can be used to store coins which don't need the key ability.",
      "attributes": [],
      "abilities": [
        "Store"
      ],
      "type_parameters": [
        {
          "phantom": true,
          "name": "T",
          "constraints": []
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "value": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    }
  },
  "enums": {}
}