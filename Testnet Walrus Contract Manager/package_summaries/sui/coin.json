{
  "doc": " Defines the `Coin` type - platform wide representation of fungible\n tokens and coins. `Coin` can be described as a secure wrapper around\n `Balance` type.",
  "immediate_dependencies": [
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "ascii"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "option"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "string"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "type_name"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "balance"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "deny_list"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "object"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "transfer"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "tx_context"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "types"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "url"
    }
  ],
  "attributes": [],
  "functions": {
    "total_supply": {
      "source_index": 0,
      "index": 0,
      "doc": " Return the total number of `T`'s in circulation.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "TreasuryCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "treasury_into_supply": {
      "source_index": 1,
      "index": 1,
      "doc": " Unwrap `TreasuryCap` getting the `Supply`.\n\n Operation is irreversible. Supply cannot be converted into a `TreasuryCap` due\n to different security guarantees (TreasuryCap can be created only once for a type)",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "treasury",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "coin"
              },
              "name": "TreasuryCap",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "balance"
            },
            "name": "Supply",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "supply_immut": {
      "source_index": 2,
      "index": 2,
      "doc": " Get immutable reference to the treasury's `Supply`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "treasury",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "TreasuryCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "balance"
                },
                "name": "Supply",
                "type_arguments": [
                  {
                    "NamedTypeParameter": "T"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "supply_mut": {
      "source_index": 3,
      "index": 3,
      "doc": " Get mutable reference to the treasury's `Supply`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "treasury",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "TreasuryCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            true,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "balance"
                },
                "name": "Supply",
                "type_arguments": [
                  {
                    "NamedTypeParameter": "T"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "value": {
      "source_index": 4,
      "index": 4,
      "doc": " Public getter for the coin's value",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "Coin",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "balance": {
      "source_index": 5,
      "index": 5,
      "doc": " Get immutable reference to the balance of a coin.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "coin",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "Coin",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "balance"
                },
                "name": "Balance",
                "type_arguments": [
                  {
                    "NamedTypeParameter": "T"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "balance_mut": {
      "source_index": 6,
      "index": 6,
      "doc": " Get a mutable reference to the balance of a coin.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "coin",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "Coin",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            true,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "balance"
                },
                "name": "Balance",
                "type_arguments": [
                  {
                    "NamedTypeParameter": "T"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "from_balance": {
      "source_index": 7,
      "index": 7,
      "doc": " Wrap a balance into a Coin to make it transferable.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "balance",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "balance"
              },
              "name": "Balance",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "Coin",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "into_balance": {
      "source_index": 8,
      "index": 8,
      "doc": " Destruct a Coin wrapper and keep the balance.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "coin",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "coin"
              },
              "name": "Coin",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "balance"
            },
            "name": "Balance",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "take": {
      "source_index": 9,
      "index": 9,
      "doc": " Take a `Coin` worth of `value` from `Balance`.\n Aborts if `value > balance.value`",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "balance",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "balance"
                  },
                  "name": "Balance",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "value",
          "type_": "u64"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "Coin",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "put": {
      "source_index": 10,
      "index": 10,
      "doc": " Put a `Coin<T>` to the `Balance<T>`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "balance",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "balance"
                  },
                  "name": "Balance",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "coin",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "coin"
              },
              "name": "Coin",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        }
      ],
      "return_": []
    },
    "join": {
      "source_index": 11,
      "index": 11,
      "doc": " Consume the coin `c` and add its value to `self`.\n Aborts if `c.value + self.value > U64_MAX`",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "Coin",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "c",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "coin"
              },
              "name": "Coin",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        }
      ],
      "return_": []
    },
    "split": {
      "source_index": 12,
      "index": 12,
      "doc": " Split coin `self` to two coins, one with balance `split_amount`,\n and the remaining balance is left is `self`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "Coin",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "split_amount",
          "type_": "u64"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "Coin",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "divide_into_n": {
      "source_index": 13,
      "index": 13,
      "doc": " Split coin `self` into `n - 1` coins with equal balances. The remainder is left in\n `self`. Return newly created coins.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "Coin",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "n",
          "type_": "u64"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "coin"
              },
              "name": "Coin",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        }
      ]
    },
    "zero": {
      "source_index": 14,
      "index": 14,
      "doc": " Make any Coin with a zero value. Useful for placeholding\n bids/payments or preemptively making empty balances.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "Coin",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "destroy_zero": {
      "source_index": 15,
      "index": 15,
      "doc": " Destroy a coin with value zero",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "c",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "coin"
              },
              "name": "Coin",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        }
      ],
      "return_": []
    },
    "create_currency": {
      "source_index": 16,
      "index": 16,
      "doc": " Create a new currency type `T` as and return the `TreasuryCap` for\n `T` to the caller. Can only be called with a `one-time-witness`\n type, ensuring that there's only one `TreasuryCap` per `T`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": [
            "Drop"
          ]
        }
      ],
      "parameters": [
        {
          "name": "witness",
          "type_": {
            "NamedTypeParameter": "T"
          }
        },
        {
          "name": "decimals",
          "type_": "u8"
        },
        {
          "name": "symbol",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "name",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "description",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "icon_url",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "option"
              },
              "name": "Option",
              "type_arguments": [
                {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000002",
                      "name": "url"
                    },
                    "name": "Url",
                    "type_arguments": []
                  }
                }
              ]
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "TreasuryCap",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        },
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "CoinMetadata",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "create_regulated_currency_v2": {
      "source_index": 17,
      "index": 17,
      "doc": " This creates a new currency, via `create_currency`, but with an extra capability that\n allows for specific addresses to have their coins frozen. When an address is added to the\n deny list, it is immediately unable to interact with the currency's coin as input objects.\n Additionally at the start of the next epoch, they will be unable to receive the currency's\n coin.\n The `allow_global_pause` flag enables an additional API that will cause all addresses to\n be denied. Note however, that this doesn't affect per-address entries of the deny list and\n will not change the result of the \"contains\" APIs.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": [
            "Drop"
          ]
        }
      ],
      "parameters": [
        {
          "name": "witness",
          "type_": {
            "NamedTypeParameter": "T"
          }
        },
        {
          "name": "decimals",
          "type_": "u8"
        },
        {
          "name": "symbol",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "name",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "description",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "icon_url",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "option"
              },
              "name": "Option",
              "type_arguments": [
                {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000002",
                      "name": "url"
                    },
                    "name": "Url",
                    "type_arguments": []
                  }
                }
              ]
            }
          }
        },
        {
          "name": "allow_global_pause",
          "type_": "bool"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "TreasuryCap",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        },
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "DenyCapV2",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        },
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "CoinMetadata",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "migrate_regulated_currency_to_v2": {
      "source_index": 18,
      "index": 18,
      "doc": " Given the `DenyCap` for a regulated currency, migrate it to the new `DenyCapV2` type.\n All entries in the deny list will be migrated to the new format.\n See `create_regulated_currency_v2` for details on the new v2 of the deny list.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "deny_list",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "deny_list"
                  },
                  "name": "DenyList",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "coin"
              },
              "name": "DenyCap",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        },
        {
          "name": "allow_global_pause",
          "type_": "bool"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "DenyCapV2",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "mint": {
      "source_index": 19,
      "index": 19,
      "doc": " Create a coin worth `value` and increase the total supply\n in `cap` accordingly.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "cap",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "TreasuryCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "value",
          "type_": "u64"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "Coin",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "mint_balance": {
      "source_index": 20,
      "index": 20,
      "doc": " Mint some amount of T as a `Balance` and increase the total\n supply in `cap` accordingly.\n Aborts if `value` + `cap.total_supply` >= U64_MAX",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "cap",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "TreasuryCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "value",
          "type_": "u64"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "balance"
            },
            "name": "Balance",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "burn": {
      "source_index": 21,
      "index": 21,
      "doc": " Destroy the coin `c` and decrease the total supply in `cap`\n accordingly.",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "cap",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "TreasuryCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "c",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "coin"
              },
              "name": "Coin",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "deny_list_v2_add": {
      "source_index": 22,
      "index": 22,
      "doc": " Adds the given address to the deny list, preventing it from interacting with the specified\n coin type as an input to a transaction. Additionally at the start of the next epoch, the\n address will be unable to receive objects of this coin type.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "deny_list",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "deny_list"
                  },
                  "name": "DenyList",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "_deny_cap",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "DenyCapV2",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "addr",
          "type_": "address"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "deny_list_v2_remove": {
      "source_index": 23,
      "index": 23,
      "doc": " Removes an address from the deny list. Similar to `deny_list_v2_add`, the effect for input\n objects will be immediate, but the effect for receiving objects will be delayed until the\n next epoch.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "deny_list",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "deny_list"
                  },
                  "name": "DenyList",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "_deny_cap",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "DenyCapV2",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "addr",
          "type_": "address"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "deny_list_v2_contains_current_epoch": {
      "source_index": 24,
      "index": 24,
      "doc": " Check if the deny list contains the given address for the current epoch. Denied addresses\n in the current epoch will be unable to receive objects of this coin type.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "deny_list",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "deny_list"
                  },
                  "name": "DenyList",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "addr",
          "type_": "address"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "deny_list_v2_contains_next_epoch": {
      "source_index": 25,
      "index": 25,
      "doc": " Check if the deny list contains the given address for the next epoch. Denied addresses in\n the next epoch will immediately be unable to use objects of this coin type as inputs. At the\n start of the next epoch, the address will be unable to receive objects of this coin type.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "deny_list",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "deny_list"
                  },
                  "name": "DenyList",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "addr",
          "type_": "address"
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "deny_list_v2_enable_global_pause": {
      "source_index": 26,
      "index": 26,
      "doc": " Enable the global pause for the given coin type. This will immediately prevent all addresses\n from using objects of this coin type as inputs. At the start of the next epoch, all\n addresses will be unable to receive objects of this coin type.",
      "attributes": [
        {
          "Parameterized": [
            "allow",
            [
              {
                "Name": "unused_mut_parameter"
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "deny_list",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "deny_list"
                  },
                  "name": "DenyList",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "deny_cap",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "DenyCapV2",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "deny_list_v2_disable_global_pause": {
      "source_index": 27,
      "index": 27,
      "doc": " Disable the global pause for the given coin type. This will immediately allow all addresses\n to resume using objects of this coin type as inputs. However, receiving objects of this coin\n type will still be paused until the start of the next epoch.",
      "attributes": [
        {
          "Parameterized": [
            "allow",
            [
              {
                "Name": "unused_mut_parameter"
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "deny_list",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "deny_list"
                  },
                  "name": "DenyList",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "deny_cap",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "DenyCapV2",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "deny_list_v2_is_global_pause_enabled_current_epoch": {
      "source_index": 28,
      "index": 28,
      "doc": " Check if the global pause is enabled for the given coin type in the current epoch.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "deny_list",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "deny_list"
                  },
                  "name": "DenyList",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "deny_list_v2_is_global_pause_enabled_next_epoch": {
      "source_index": 29,
      "index": 29,
      "doc": " Check if the global pause is enabled for the given coin type in the next epoch.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "deny_list",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "deny_list"
                  },
                  "name": "DenyList",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "mint_and_transfer": {
      "source_index": 30,
      "index": 30,
      "doc": " Mint `amount` of `Coin` and send it to `recipient`. Invokes `mint()`.",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "c",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "TreasuryCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "amount",
          "type_": "u64"
        },
        {
          "name": "recipient",
          "type_": "address"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "update_name": {
      "source_index": 31,
      "index": 31,
      "doc": " Update name of the coin in `CoinMetadata`",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "_treasury",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "TreasuryCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "metadata",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "CoinMetadata",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "name",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "update_symbol": {
      "source_index": 32,
      "index": 32,
      "doc": " Update the symbol of the coin in `CoinMetadata`",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "_treasury",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "TreasuryCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "metadata",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "CoinMetadata",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "symbol",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "ascii"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "update_description": {
      "source_index": 33,
      "index": 33,
      "doc": " Update the description of the coin in `CoinMetadata`",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "_treasury",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "TreasuryCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "metadata",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "CoinMetadata",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "description",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "update_icon_url": {
      "source_index": 34,
      "index": 34,
      "doc": " Update the url of the coin in `CoinMetadata`",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "_treasury",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "TreasuryCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "metadata",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "CoinMetadata",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "url",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "ascii"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "get_decimals": {
      "source_index": 35,
      "index": 35,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "metadata",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "CoinMetadata",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u8"
      ]
    },
    "get_name": {
      "source_index": 36,
      "index": 36,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "metadata",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "CoinMetadata",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "get_symbol": {
      "source_index": 37,
      "index": 37,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "metadata",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "CoinMetadata",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "ascii"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "get_description": {
      "source_index": 38,
      "index": 38,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "metadata",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "CoinMetadata",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "string"
            },
            "name": "String",
            "type_arguments": []
          }
        }
      ]
    },
    "get_icon_url": {
      "source_index": 39,
      "index": 39,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "metadata",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "CoinMetadata",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "url"
                  },
                  "name": "Url",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ]
    },
    "supply": {
      "source_index": 40,
      "index": 40,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "treasury",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "TreasuryCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "balance"
                },
                "name": "Supply",
                "type_arguments": [
                  {
                    "NamedTypeParameter": "T"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "create_regulated_currency": {
      "source_index": 41,
      "index": 41,
      "doc": " This creates a new currency, via `create_currency`, but with an extra capability that\n allows for specific addresses to have their coins frozen. Those addresses cannot interact\n with the coin as input objects.",
      "attributes": [
        {
          "Parameterized": [
            "deprecated",
            [
              {
                "Assigned": [
                  "note",
                  "For new coins, use `create_regulated_currency_v2`. To migrate existing regulated currencies, migrate with `migrate_regulated_currency_to_v2`"
                ]
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": [
            "Drop"
          ]
        }
      ],
      "parameters": [
        {
          "name": "witness",
          "type_": {
            "NamedTypeParameter": "T"
          }
        },
        {
          "name": "decimals",
          "type_": "u8"
        },
        {
          "name": "symbol",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "name",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "description",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "icon_url",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "option"
              },
              "name": "Option",
              "type_arguments": [
                {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000002",
                      "name": "url"
                    },
                    "name": "Url",
                    "type_arguments": []
                  }
                }
              ]
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "TreasuryCap",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        },
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "DenyCap",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        },
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "CoinMetadata",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "deny_list_add": {
      "source_index": 42,
      "index": 42,
      "doc": " Adds the given address to the deny list, preventing it\n from interacting with the specified coin type as an input to a transaction.",
      "attributes": [
        {
          "Parameterized": [
            "deprecated",
            [
              {
                "Assigned": [
                  "note",
                  "Use `migrate_regulated_currency_to_v2` to migrate to v2 and then use `deny_list_v2_add`"
                ]
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "deny_list",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "deny_list"
                  },
                  "name": "DenyList",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "_deny_cap",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "DenyCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "addr",
          "type_": "address"
        },
        {
          "name": "_ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "deny_list_remove": {
      "source_index": 43,
      "index": 43,
      "doc": " Removes an address from the deny list.\n Aborts with `ENotFrozen` if the address is not already in the list.",
      "attributes": [
        {
          "Parameterized": [
            "deprecated",
            [
              {
                "Assigned": [
                  "note",
                  "Use `migrate_regulated_currency_to_v2` to migrate to v2 and then use `deny_list_v2_remove`"
                ]
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "deny_list",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "deny_list"
                  },
                  "name": "DenyList",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "_deny_cap",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "DenyCap",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "addr",
          "type_": "address"
        },
        {
          "name": "_ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "deny_list_contains": {
      "source_index": 44,
      "index": 44,
      "doc": " Returns true iff the given address is denied for the given coin type. It will\n return false if given a non-coin type.",
      "attributes": [
        {
          "Parameterized": [
            "deprecated",
            [
              {
                "Assigned": [
                  "note",
                  "Use `migrate_regulated_currency_to_v2` to migrate to v2 and then use `deny_list_v2_contains_next_epoch` or `deny_list_v2_contains_current_epoch`"
                ]
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "deny_list",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "deny_list"
                  },
                  "name": "DenyList",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "addr",
          "type_": "address"
        }
      ],
      "return_": [
        "bool"
      ]
    }
  },
  "structs": {
    "Coin": {
      "index": 0,
      "doc": " A coin of type `T` worth `value`. Transferable and storable",
      "attributes": [],
      "abilities": [
        "Key",
        "Store"
      ],
      "type_parameters": [
        {
          "phantom": true,
          "name": "T",
          "constraints": []
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "UID",
                "type_arguments": []
              }
            }
          },
          "balance": {
            "index": 1,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "balance"
                },
                "name": "Balance",
                "type_arguments": [
                  {
                    "TypeParameter": 0
                  }
                ]
              }
            }
          }
        }
      }
    },
    "CoinMetadata": {
      "index": 1,
      "doc": " Each Coin type T created through `create_currency` function will have a\n unique instance of CoinMetadata<T> that stores the metadata for this coin type.",
      "attributes": [],
      "abilities": [
        "Key",
        "Store"
      ],
      "type_parameters": [
        {
          "phantom": true,
          "name": "T",
          "constraints": []
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "UID",
                "type_arguments": []
              }
            }
          },
          "decimals": {
            "index": 1,
            "doc": " Number of decimal places the coin uses.\n A coin with `value ` N and `decimals` D should be shown as N / 10^D\n E.g., a coin with `value` 7002 and decimals 3 should be displayed as 7.002\n This is metadata for display usage only.",
            "type_": "u8"
          },
          "name": {
            "index": 2,
            "doc": " Name for the token",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "symbol": {
            "index": 3,
            "doc": " Symbol for the token",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "ascii"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "description": {
            "index": 4,
            "doc": " Description of the token",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "string"
                },
                "name": "String",
                "type_arguments": []
              }
            }
          },
          "icon_url": {
            "index": 5,
            "doc": " URL for the token logo",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000002",
                        "name": "url"
                      },
                      "name": "Url",
                      "type_arguments": []
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "RegulatedCoinMetadata": {
      "index": 2,
      "doc": " Similar to CoinMetadata, but created only for regulated coins that use the DenyList.\n This object is always immutable.",
      "attributes": [],
      "abilities": [
        "Key"
      ],
      "type_parameters": [
        {
          "phantom": true,
          "name": "T",
          "constraints": []
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "UID",
                "type_arguments": []
              }
            }
          },
          "coin_metadata_object": {
            "index": 1,
            "doc": " The ID of the coin's CoinMetadata object.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "ID",
                "type_arguments": []
              }
            }
          },
          "deny_cap_object": {
            "index": 2,
            "doc": " The ID of the coin's DenyCap object.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "ID",
                "type_arguments": []
              }
            }
          }
        }
      }
    },
    "TreasuryCap": {
      "index": 3,
      "doc": " Capability allowing the bearer to mint and burn\n coins of type `T`. Transferable",
      "attributes": [],
      "abilities": [
        "Key",
        "Store"
      ],
      "type_parameters": [
        {
          "phantom": true,
          "name": "T",
          "constraints": []
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "UID",
                "type_arguments": []
              }
            }
          },
          "total_supply": {
            "index": 1,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "balance"
                },
                "name": "Supply",
                "type_arguments": [
                  {
                    "TypeParameter": 0
                  }
                ]
              }
            }
          }
        }
      }
    },
    "DenyCapV2": {
      "index": 4,
      "doc": " Capability allowing the bearer to deny addresses from using the currency's coins--\n immediately preventing those addresses from interacting with the coin as an input to a\n transaction and at the start of the next preventing them from receiving the coin.\n If `allow_global_pause` is true, the bearer can enable a global pause that behaves as if\n all addresses were added to the deny list.",
      "attributes": [],
      "abilities": [
        "Key",
        "Store"
      ],
      "type_parameters": [
        {
          "phantom": true,
          "name": "T",
          "constraints": []
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "UID",
                "type_arguments": []
              }
            }
          },
          "allow_global_pause": {
            "index": 1,
            "doc": null,
            "type_": "bool"
          }
        }
      }
    },
    "CurrencyCreated": {
      "index": 5,
      "doc": null,
      "attributes": [
        {
          "Parameterized": [
            "allow",
            [
              {
                "Name": "unused_field"
              }
            ]
          ]
        }
      ],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [
        {
          "phantom": true,
          "name": "T",
          "constraints": []
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "decimals": {
            "index": 0,
            "doc": null,
            "type_": "u8"
          }
        }
      }
    },
    "DenyCap": {
      "index": 6,
      "doc": " Capability allowing the bearer to freeze addresses, preventing those addresses from\n interacting with the coin as an input to a transaction.",
      "attributes": [],
      "abilities": [
        "Key",
        "Store"
      ],
      "type_parameters": [
        {
          "phantom": true,
          "name": "T",
          "constraints": []
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "UID",
                "type_arguments": []
              }
            }
          }
        }
      }
    }
  },
  "enums": {}
}