{
  "doc": " Similar to `sui::table` but the values are linked together, allowing for ordered insertion and\n removal",
  "immediate_dependencies": [
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "option"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "dynamic_field"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "object"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "tx_context"
    }
  ],
  "attributes": [],
  "functions": {
    "new": {
      "source_index": 0,
      "index": 0,
      "doc": " Creates a new, empty table",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "linked_table"
            },
            "name": "LinkedTable",
            "type_arguments": [
              {
                "NamedTypeParameter": "K"
              },
              {
                "NamedTypeParameter": "V"
              }
            ]
          }
        }
      ]
    },
    "front": {
      "source_index": 1,
      "index": 1,
      "doc": " Returns the key for the first element in the table, or None if the table is empty",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "table",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "linked_table"
                  },
                  "name": "LinkedTable",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "K"
                    },
                    {
                      "NamedTypeParameter": "V"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "NamedTypeParameter": "K"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "back": {
      "source_index": 2,
      "index": 2,
      "doc": " Returns the key for the last element in the table, or None if the table is empty",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "table",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "linked_table"
                  },
                  "name": "LinkedTable",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "K"
                    },
                    {
                      "NamedTypeParameter": "V"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "NamedTypeParameter": "K"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "push_front": {
      "source_index": 3,
      "index": 3,
      "doc": " Inserts a key-value pair at the front of the table, i.e. the newly inserted pair will be\n the first element in the table\n Aborts with `sui::dynamic_field::EFieldAlreadyExists` if the table already has an entry with\n that key `k: K`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "table",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "linked_table"
                  },
                  "name": "LinkedTable",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "K"
                    },
                    {
                      "NamedTypeParameter": "V"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "k",
          "type_": {
            "NamedTypeParameter": "K"
          }
        },
        {
          "name": "value",
          "type_": {
            "NamedTypeParameter": "V"
          }
        }
      ],
      "return_": []
    },
    "push_back": {
      "source_index": 4,
      "index": 4,
      "doc": " Inserts a key-value pair at the back of the table, i.e. the newly inserted pair will be\n the last element in the table\n Aborts with `sui::dynamic_field::EFieldAlreadyExists` if the table already has an entry with\n that key `k: K`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "table",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "linked_table"
                  },
                  "name": "LinkedTable",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "K"
                    },
                    {
                      "NamedTypeParameter": "V"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "k",
          "type_": {
            "NamedTypeParameter": "K"
          }
        },
        {
          "name": "value",
          "type_": {
            "NamedTypeParameter": "V"
          }
        }
      ],
      "return_": []
    },
    "borrow": {
      "source_index": 5,
      "index": 5,
      "doc": " Immutable borrows the value associated with the key in the table `table: &LinkedTable<K, V>`.\n Aborts with `sui::dynamic_field::EFieldDoesNotExist` if the table does not have an entry with\n that key `k: K`.",
      "attributes": [
        {
          "Parameterized": [
            "syntax",
            [
              {
                "Name": "index"
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "table",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "linked_table"
                  },
                  "name": "LinkedTable",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "K"
                    },
                    {
                      "NamedTypeParameter": "V"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "k",
          "type_": {
            "NamedTypeParameter": "K"
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "NamedTypeParameter": "V"
            }
          ]
        }
      ]
    },
    "borrow_mut": {
      "source_index": 6,
      "index": 6,
      "doc": " Mutably borrows the value associated with the key in the table `table: &mut LinkedTable<K, V>`.\n Aborts with `sui::dynamic_field::EFieldDoesNotExist` if the table does not have an entry with\n that key `k: K`.",
      "attributes": [
        {
          "Parameterized": [
            "syntax",
            [
              {
                "Name": "index"
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "table",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "linked_table"
                  },
                  "name": "LinkedTable",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "K"
                    },
                    {
                      "NamedTypeParameter": "V"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "k",
          "type_": {
            "NamedTypeParameter": "K"
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            true,
            {
              "NamedTypeParameter": "V"
            }
          ]
        }
      ]
    },
    "prev": {
      "source_index": 7,
      "index": 7,
      "doc": " Borrows the key for the previous entry of the specified key `k: K` in the table\n `table: &LinkedTable<K, V>`. Returns None if the entry does not have a predecessor.\n Aborts with `sui::dynamic_field::EFieldDoesNotExist` if the table does not have an entry with\n that key `k: K`",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "table",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "linked_table"
                  },
                  "name": "LinkedTable",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "K"
                    },
                    {
                      "NamedTypeParameter": "V"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "k",
          "type_": {
            "NamedTypeParameter": "K"
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "NamedTypeParameter": "K"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "next": {
      "source_index": 8,
      "index": 8,
      "doc": " Borrows the key for the next entry of the specified key `k: K` in the table\n `table: &LinkedTable<K, V>`. Returns None if the entry does not have a predecessor.\n Aborts with `sui::dynamic_field::EFieldDoesNotExist` if the table does not have an entry with\n that key `k: K`",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "table",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "linked_table"
                  },
                  "name": "LinkedTable",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "K"
                    },
                    {
                      "NamedTypeParameter": "V"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "k",
          "type_": {
            "NamedTypeParameter": "K"
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "NamedTypeParameter": "K"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "remove": {
      "source_index": 9,
      "index": 9,
      "doc": " Removes the key-value pair in the table `table: &mut LinkedTable<K, V>` and returns the value.\n This splices the element out of the ordering.\n Aborts with `sui::dynamic_field::EFieldDoesNotExist` if the table does not have an entry with\n that key `k: K`. Note: this is also what happens when the table is empty.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "table",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "linked_table"
                  },
                  "name": "LinkedTable",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "K"
                    },
                    {
                      "NamedTypeParameter": "V"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "k",
          "type_": {
            "NamedTypeParameter": "K"
          }
        }
      ],
      "return_": [
        {
          "NamedTypeParameter": "V"
        }
      ]
    },
    "pop_front": {
      "source_index": 10,
      "index": 10,
      "doc": " Removes the front of the table `table: &mut LinkedTable<K, V>` and returns the value.\n Aborts with `ETableIsEmpty` if the table is empty",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "table",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "linked_table"
                  },
                  "name": "LinkedTable",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "K"
                    },
                    {
                      "NamedTypeParameter": "V"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "NamedTypeParameter": "K"
        },
        {
          "NamedTypeParameter": "V"
        }
      ]
    },
    "pop_back": {
      "source_index": 11,
      "index": 11,
      "doc": " Removes the back of the table `table: &mut LinkedTable<K, V>` and returns the value.\n Aborts with `ETableIsEmpty` if the table is empty",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "table",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "linked_table"
                  },
                  "name": "LinkedTable",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "K"
                    },
                    {
                      "NamedTypeParameter": "V"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "NamedTypeParameter": "K"
        },
        {
          "NamedTypeParameter": "V"
        }
      ]
    },
    "contains": {
      "source_index": 12,
      "index": 12,
      "doc": " Returns true iff there is a value associated with the key `k: K` in table\n `table: &LinkedTable<K, V>`",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "table",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "linked_table"
                  },
                  "name": "LinkedTable",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "K"
                    },
                    {
                      "NamedTypeParameter": "V"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "k",
          "type_": {
            "NamedTypeParameter": "K"
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "length": {
      "source_index": 13,
      "index": 13,
      "doc": " Returns the size of the table, the number of key-value pairs",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "table",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "linked_table"
                  },
                  "name": "LinkedTable",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "K"
                    },
                    {
                      "NamedTypeParameter": "V"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "is_empty": {
      "source_index": 14,
      "index": 14,
      "doc": " Returns true iff the table is empty (if `length` returns `0`)",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "table",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "linked_table"
                  },
                  "name": "LinkedTable",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "K"
                    },
                    {
                      "NamedTypeParameter": "V"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "destroy_empty": {
      "source_index": 15,
      "index": 15,
      "doc": " Destroys an empty table\n Aborts with `ETableNotEmpty` if the table still contains values",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "table",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "linked_table"
              },
              "name": "LinkedTable",
              "type_arguments": [
                {
                  "NamedTypeParameter": "K"
                },
                {
                  "NamedTypeParameter": "V"
                }
              ]
            }
          }
        }
      ],
      "return_": []
    },
    "drop": {
      "source_index": 16,
      "index": 16,
      "doc": " Drop a possibly non-empty table.\n Usable only if the value type `V` has the `drop` ability",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "name": "V",
          "constraints": [
            "Drop",
            "Store"
          ]
        }
      ],
      "parameters": [
        {
          "name": "table",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "linked_table"
              },
              "name": "LinkedTable",
              "type_arguments": [
                {
                  "NamedTypeParameter": "K"
                },
                {
                  "NamedTypeParameter": "V"
                }
              ]
            }
          }
        }
      ],
      "return_": []
    }
  },
  "structs": {
    "LinkedTable": {
      "index": 0,
      "doc": null,
      "attributes": [],
      "abilities": [
        "Key",
        "Store"
      ],
      "type_parameters": [
        {
          "phantom": false,
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "phantom": true,
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": " the ID of this table",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "UID",
                "type_arguments": []
              }
            }
          },
          "size": {
            "index": 1,
            "doc": " the number of key-value pairs in the table",
            "type_": "u64"
          },
          "head": {
            "index": 2,
            "doc": " the front of the table, i.e. the key of the first entry",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "TypeParameter": 0
                  }
                ]
              }
            }
          },
          "tail": {
            "index": 3,
            "doc": " the back of the table, i.e. the key of the last entry",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "TypeParameter": 0
                  }
                ]
              }
            }
          }
        }
      }
    },
    "Node": {
      "index": 1,
      "doc": null,
      "attributes": [],
      "abilities": [
        "Store"
      ],
      "type_parameters": [
        {
          "phantom": false,
          "name": "K",
          "constraints": [
            "Copy",
            "Drop",
            "Store"
          ]
        },
        {
          "phantom": false,
          "name": "V",
          "constraints": [
            "Store"
          ]
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "prev": {
            "index": 0,
            "doc": " the previous key",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "TypeParameter": 0
                  }
                ]
              }
            }
          },
          "next": {
            "index": 1,
            "doc": " the next key",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "TypeParameter": 0
                  }
                ]
              }
            }
          },
          "value": {
            "index": 2,
            "doc": " the value being stored",
            "type_": {
              "TypeParameter": 1
            }
          }
        }
      }
    }
  },
  "enums": {}
}