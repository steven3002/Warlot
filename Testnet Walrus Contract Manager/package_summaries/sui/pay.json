{
  "doc": " This module provides handy functionality for wallets and `sui::Coin` management.",
  "immediate_dependencies": [
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "coin"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "transfer"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "tx_context"
    }
  ],
  "attributes": [],
  "functions": {
    "keep": {
      "source_index": 0,
      "index": 0,
      "doc": " Transfer `c` to the sender of the current transaction",
      "attributes": [
        {
          "Parameterized": [
            "allow",
            [
              {
                "Parameterized": [
                  "lint",
                  [
                    {
                      "Name": "self_transfer"
                    }
                  ]
                ]
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "c",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "coin"
              },
              "name": "Coin",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "split": {
      "source_index": 1,
      "index": 1,
      "doc": " Split coin `self` to two coins, one with balance `split_amount`,\n and the remaining balance is left is `self`.",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "coin",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "Coin",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "split_amount",
          "type_": "u64"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "split_vec": {
      "source_index": 2,
      "index": 2,
      "doc": " Split coin `self` into multiple coins, each with balance specified\n in `split_amounts`. Remaining balance is left in `self`.",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "Coin",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "split_amounts",
          "type_": {
            "vector": "u64"
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "split_and_transfer": {
      "source_index": 3,
      "index": 3,
      "doc": " Send `amount` units of `c` to `recipient`\n Aborts with `EVALUE` if `amount` is greater than or equal to `amount`",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "c",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "Coin",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "amount",
          "type_": "u64"
        },
        {
          "name": "recipient",
          "type_": "address"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "divide_and_keep": {
      "source_index": 4,
      "index": 4,
      "doc": " Divide coin `self` into `n - 1` coins with equal balances. If the balance is\n not evenly divisible by `n`, the remainder is left in `self`.",
      "attributes": [
        {
          "Parameterized": [
            "allow",
            [
              {
                "Parameterized": [
                  "lint",
                  [
                    {
                      "Name": "self_transfer"
                    }
                  ]
                ]
              }
            ]
          ]
        }
      ],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "Coin",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "n",
          "type_": "u64"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "join": {
      "source_index": 5,
      "index": 5,
      "doc": " Join `coin` into `self`. Re-exports `coin::join` function.\n Deprecated: you should call `coin.join(other)` directly.",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "Coin",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "coin",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "coin"
              },
              "name": "Coin",
              "type_arguments": [
                {
                  "NamedTypeParameter": "T"
                }
              ]
            }
          }
        }
      ],
      "return_": []
    },
    "join_vec": {
      "source_index": 6,
      "index": 6,
      "doc": " Join everything in `coins` with `self`",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "Coin",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "coins",
          "type_": {
            "vector": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "coin"
                },
                "name": "Coin",
                "type_arguments": [
                  {
                    "NamedTypeParameter": "T"
                  }
                ]
              }
            }
          }
        }
      ],
      "return_": []
    },
    "join_vec_and_transfer": {
      "source_index": 7,
      "index": 7,
      "doc": " Join a vector of `Coin` into a single object and transfer it to `receiver`.",
      "attributes": [],
      "visibility": "Public",
      "entry": true,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "coins",
          "type_": {
            "vector": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "coin"
                },
                "name": "Coin",
                "type_arguments": [
                  {
                    "NamedTypeParameter": "T"
                  }
                ]
              }
            }
          }
        },
        {
          "name": "receiver",
          "type_": "address"
        }
      ],
      "return_": []
    }
  },
  "structs": {},
  "enums": {}
}