{
  "doc": " This module implements BCS (de)serialization in Move.\n Full specification can be found here: https://github.com/diem/bcs\n\n Short summary (for Move-supported types):\n\n - address - sequence of X bytes\n - bool - byte with 0 or 1\n - u8 - a single u8 byte\n - u16 / u32 / u64 / u128 / u256 - LE bytes\n - vector - ULEB128 length + LEN elements\n - option - first byte bool: None (0) or Some (1), then value\n\n Usage example:\n ```\n /// This function reads u8 and u64 value from the input\n /// and returns the rest of the bytes.\n fun deserialize(bytes: vector<u8>): (u8, u64, vector<u8>) {\n     use sui::bcs::{Self, BCS};\n\n     let prepared: BCS = bcs::new(bytes);\n     let (u8_value, u64_value) = (\n         prepared.peel_u8(),\n         prepared.peel_u64()\n     );\n\n     // unpack bcs struct\n     let leftovers = prepared.into_remainder_bytes();\n\n     (u8_value, u64_value, leftovers)\n }\n ```",
  "immediate_dependencies": [
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "bcs"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "option"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "vector"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "address"
    }
  ],
  "attributes": [],
  "functions": {
    "to_bytes": {
      "source_index": 0,
      "index": 0,
      "doc": " Get BCS serialized bytes for any value.\n Re-exports stdlib `bcs::to_bytes`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "value",
          "type_": {
            "Reference": [
              false,
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": "u8"
        }
      ]
    },
    "new": {
      "source_index": 1,
      "index": 1,
      "doc": " Creates a new instance of BCS wrapper that holds inversed\n bytes for better performance.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bytes",
          "type_": {
            "vector": "u8"
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "bcs"
            },
            "name": "BCS",
            "type_arguments": []
          }
        }
      ]
    },
    "into_remainder_bytes": {
      "source_index": 2,
      "index": 2,
      "doc": " Unpack the `BCS` struct returning the leftover bytes.\n Useful for passing the data further after partial deserialization.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "bcs"
              },
              "name": "BCS",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "vector": "u8"
        }
      ]
    },
    "peel_address": {
      "source_index": 3,
      "index": 3,
      "doc": " Read address from the bcs-serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "address"
      ]
    },
    "peel_bool": {
      "source_index": 4,
      "index": 4,
      "doc": " Read a `bool` value from bcs-serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "peel_u8": {
      "source_index": 5,
      "index": 5,
      "doc": " Read `u8` value from bcs-serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u8"
      ]
    },
    "peel_u16": {
      "source_index": 7,
      "index": 6,
      "doc": " Read `u16` value from bcs-serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u16"
      ]
    },
    "peel_u32": {
      "source_index": 8,
      "index": 7,
      "doc": " Read `u32` value from bcs-serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u32"
      ]
    },
    "peel_u64": {
      "source_index": 9,
      "index": 8,
      "doc": " Read `u64` value from bcs-serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "peel_u128": {
      "source_index": 10,
      "index": 9,
      "doc": " Read `u128` value from bcs-serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u128"
      ]
    },
    "peel_u256": {
      "source_index": 11,
      "index": 10,
      "doc": " Read `u256` value from bcs-serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u256"
      ]
    },
    "peel_vec_length": {
      "source_index": 12,
      "index": 11,
      "doc": " Read ULEB bytes expecting a vector length. Result should\n then be used to perform `peel_*` operation LEN times.\n\n In BCS `vector` length is implemented with ULEB128;\n See more here: https://en.wikipedia.org/wiki/LEB128",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "peel_vec_address": {
      "source_index": 14,
      "index": 12,
      "doc": " Peel a vector of `address` from serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": "address"
        }
      ]
    },
    "peel_vec_bool": {
      "source_index": 15,
      "index": 13,
      "doc": " Peel a vector of `address` from serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": "bool"
        }
      ]
    },
    "peel_vec_u8": {
      "source_index": 16,
      "index": 14,
      "doc": " Peel a vector of `u8` (eg string) from serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": "u8"
        }
      ]
    },
    "peel_vec_vec_u8": {
      "source_index": 17,
      "index": 15,
      "doc": " Peel a `vector<vector<u8>>` (eg vec of string) from serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": {
            "vector": "u8"
          }
        }
      ]
    },
    "peel_vec_u16": {
      "source_index": 18,
      "index": 16,
      "doc": " Peel a vector of `u16` from serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": "u16"
        }
      ]
    },
    "peel_vec_u32": {
      "source_index": 19,
      "index": 17,
      "doc": " Peel a vector of `u32` from serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": "u32"
        }
      ]
    },
    "peel_vec_u64": {
      "source_index": 20,
      "index": 18,
      "doc": " Peel a vector of `u64` from serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": "u64"
        }
      ]
    },
    "peel_vec_u128": {
      "source_index": 21,
      "index": 19,
      "doc": " Peel a vector of `u128` from serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": "u128"
        }
      ]
    },
    "peel_vec_u256": {
      "source_index": 22,
      "index": 20,
      "doc": " Peel a vector of `u256` from serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": "u256"
        }
      ]
    },
    "peel_enum_tag": {
      "source_index": 23,
      "index": 21,
      "doc": " Peel enum from serialized bytes, where `$f` takes a `tag` value and returns\n the corresponding enum variant. Move enums are limited to 127 variants,\n however the tag can be any `u32` value.\n\n Example:\n ```rust\n let my_enum = match (bcs.peel_enum_tag()) {\n    0 => Enum::Empty,\n    1 => Enum::U8(bcs.peel_u8()),\n    2 => Enum::U16(bcs.peel_u16()),\n    3 => Enum::Struct { a: bcs.peel_address(), b: bcs.peel_u8() },\n    _ => abort,\n };\n ```",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u32"
      ]
    },
    "peel_option_address": {
      "source_index": 25,
      "index": 22,
      "doc": " Peel `Option<address>` from serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              "address"
            ]
          }
        }
      ]
    },
    "peel_option_bool": {
      "source_index": 26,
      "index": 23,
      "doc": " Peel `Option<bool>` from serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              "bool"
            ]
          }
        }
      ]
    },
    "peel_option_u8": {
      "source_index": 27,
      "index": 24,
      "doc": " Peel `Option<u8>` from serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              "u8"
            ]
          }
        }
      ]
    },
    "peel_option_u16": {
      "source_index": 28,
      "index": 25,
      "doc": " Peel `Option<u16>` from serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              "u16"
            ]
          }
        }
      ]
    },
    "peel_option_u32": {
      "source_index": 29,
      "index": 26,
      "doc": " Peel `Option<u32>` from serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              "u32"
            ]
          }
        }
      ]
    },
    "peel_option_u64": {
      "source_index": 30,
      "index": 27,
      "doc": " Peel `Option<u64>` from serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              "u64"
            ]
          }
        }
      ]
    },
    "peel_option_u128": {
      "source_index": 31,
      "index": 28,
      "doc": " Peel `Option<u128>` from serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              "u128"
            ]
          }
        }
      ]
    },
    "peel_option_u256": {
      "source_index": 32,
      "index": 29,
      "doc": " Peel `Option<u256>` from serialized bytes.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              "u256"
            ]
          }
        }
      ]
    },
    "peel_num": {
      "source_index": 6,
      "index": 18446744073709551615,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "macro_": true,
      "type_parameters": [
        {
          "name": "$I",
          "constraints": []
        },
        {
          "name": "$T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "$bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "$len",
          "type_": "u64"
        },
        {
          "name": "$bits",
          "type_": {
            "NamedTypeParameter": "$I"
          }
        }
      ],
      "return_": [
        {
          "NamedTypeParameter": "$T"
        }
      ]
    },
    "peel_option": {
      "source_index": 24,
      "index": 18446744073709551615,
      "doc": " Peel `Option<$T>` from serialized bytes, where `$peel: |&mut BCS| -> $T` gives the\n functionality of peeling the inner value.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "macro_": true,
      "type_parameters": [
        {
          "name": "$T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "$bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "$peel",
          "type_": {
            "fun": [
              [
                {
                  "Reference": [
                    true,
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000002",
                          "name": "bcs"
                        },
                        "name": "BCS",
                        "type_arguments": []
                      }
                    }
                  ]
                }
              ],
              {
                "NamedTypeParameter": "$T"
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              {
                "NamedTypeParameter": "$T"
              }
            ]
          }
        }
      ]
    },
    "peel_vec": {
      "source_index": 13,
      "index": 18446744073709551615,
      "doc": " Peel `vector<$T>` from serialized bytes, where `$peel: |&mut BCS| -> $T` gives the\n functionality of peeling each value.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "macro_": true,
      "type_parameters": [
        {
          "name": "$T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "$bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "$peel",
          "type_": {
            "fun": [
              [
                {
                  "Reference": [
                    true,
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000002",
                          "name": "bcs"
                        },
                        "name": "BCS",
                        "type_arguments": []
                      }
                    }
                  ]
                }
              ],
              {
                "NamedTypeParameter": "$T"
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": {
            "NamedTypeParameter": "$T"
          }
        }
      ]
    }
  },
  "structs": {
    "BCS": {
      "index": 0,
      "doc": " A helper struct that saves resources on operations. For better\n vector performance, it stores reversed bytes of the BCS and\n enables use of `vector::pop_back`.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop",
        "Store"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "bytes": {
            "index": 0,
            "doc": null,
            "type_": {
              "vector": "u8"
            }
          }
        }
      }
    }
  },
  "enums": {}
}