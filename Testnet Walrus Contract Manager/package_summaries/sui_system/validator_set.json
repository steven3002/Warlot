{
  "doc": null,
  "immediate_dependencies": [
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "option"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "vector"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "bag"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "balance"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "event"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "object"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "priority_queue"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "sui"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "table"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "table_vec"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "transfer"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "tx_context"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "vec_map"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "vec_set"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000003",
      "name": "staking_pool"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000003",
      "name": "validator"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000003",
      "name": "validator_cap"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000003",
      "name": "validator_wrapper"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000003",
      "name": "voting_power"
    }
  ],
  "attributes": [],
  "functions": {
    "new": {
      "source_index": 0,
      "index": 0,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "init_active_validators",
          "type_": {
            "vector": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000003",
                  "name": "validator"
                },
                "name": "Validator",
                "type_arguments": []
              }
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000003",
              "name": "validator_set"
            },
            "name": "ValidatorSet",
            "type_arguments": []
          }
        }
      ]
    },
    "request_add_validator_candidate": {
      "source_index": 1,
      "index": 1,
      "doc": " Called by `sui_system` to add a new validator candidate.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000003",
                "name": "validator"
              },
              "name": "Validator",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "request_remove_validator_candidate": {
      "source_index": 2,
      "index": 2,
      "doc": " Called by `sui_system` to remove a validator candidate, and move them to `inactive_validators`.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "request_add_validator": {
      "source_index": 3,
      "index": 3,
      "doc": " Called by `sui_system` to add a new validator to `pending_active_validators`, which will be\n processed at the end of epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "min_joining_stake_amount",
          "type_": "u64"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "assert_no_pending_or_active_duplicates": {
      "source_index": 4,
      "index": 4,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator"
                  },
                  "name": "Validator",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "request_remove_validator": {
      "source_index": 5,
      "index": 5,
      "doc": " Called by `sui_system`, to remove a validator.\n The index of the validator is added to `pending_removals` and\n will be processed at the end of epoch.\n Only an active validator can request to be removed.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "request_add_stake": {
      "source_index": 6,
      "index": 6,
      "doc": " Called by `sui_system`, to add a new stake to the validator.\n This request is added to the validator's staking pool's pending stake entries, processed at the end\n of the epoch.\n Aborts in case the staking amount is smaller than MIN_STAKING_THRESHOLD",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_address",
          "type_": "address"
        },
        {
          "name": "stake",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "balance"
              },
              "name": "Balance",
              "type_arguments": [
                {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000002",
                      "name": "sui"
                    },
                    "name": "SUI",
                    "type_arguments": []
                  }
                }
              ]
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000003",
              "name": "staking_pool"
            },
            "name": "StakedSui",
            "type_arguments": []
          }
        }
      ]
    },
    "request_withdraw_stake": {
      "source_index": 7,
      "index": 7,
      "doc": " Called by `sui_system`, to withdraw some share of a stake from the validator. The share to withdraw\n is denoted by `principal_withdraw_amount`. One of two things occurs in this function:\n 1. If the `staked_sui` is staked with an active validator, the request is added to the validator's\n    staking pool's pending stake withdraw entries, processed at the end of the epoch.\n 2. If the `staked_sui` was staked with a validator that is no longer active,\n    the stake and any rewards corresponding to it will be immediately processed.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "staked_sui",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000003",
                "name": "staking_pool"
              },
              "name": "StakedSui",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "balance"
            },
            "name": "Balance",
            "type_arguments": [
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "sui"
                  },
                  "name": "SUI",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ]
    },
    "convert_to_fungible_staked_sui": {
      "source_index": 8,
      "index": 8,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "staked_sui",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000003",
                "name": "staking_pool"
              },
              "name": "StakedSui",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000003",
              "name": "staking_pool"
            },
            "name": "FungibleStakedSui",
            "type_arguments": []
          }
        }
      ]
    },
    "redeem_fungible_staked_sui": {
      "source_index": 9,
      "index": 9,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "fungible_staked_sui",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000003",
                "name": "staking_pool"
              },
              "name": "FungibleStakedSui",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "balance"
            },
            "name": "Balance",
            "type_arguments": [
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "sui"
                  },
                  "name": "SUI",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ]
    },
    "request_set_commission_rate": {
      "source_index": 10,
      "index": 10,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "new_commission_rate",
          "type_": "u64"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "advance_epoch": {
      "source_index": 11,
      "index": 11,
      "doc": " Update the validator set at the end of epoch.\n It does the following things:\n   1. Distribute stake award.\n   2. Process pending stake deposits and withdraws for each validator (`adjust_stake`).\n   3. Process pending stake deposits, and withdraws.\n   4. Process pending validator application and withdraws.\n   5. At the end, we calculate the total stake for the new epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "computation_reward",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "balance"
                  },
                  "name": "Balance",
                  "type_arguments": [
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000002",
                          "name": "sui"
                        },
                        "name": "SUI",
                        "type_arguments": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "storage_fund_reward",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "balance"
                  },
                  "name": "Balance",
                  "type_arguments": [
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000002",
                          "name": "sui"
                        },
                        "name": "SUI",
                        "type_arguments": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "validator_report_records",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "vec_map"
                  },
                  "name": "VecMap",
                  "type_arguments": [
                    "address",
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000002",
                          "name": "vec_set"
                        },
                        "name": "VecSet",
                        "type_arguments": [
                          "address"
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "reward_slashing_rate",
          "type_": "u64"
        },
        {
          "name": "low_stake_threshold",
          "type_": "u64"
        },
        {
          "name": "very_low_stake_threshold",
          "type_": "u64"
        },
        {
          "name": "low_stake_grace_period",
          "type_": "u64"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "update_and_process_low_stake_departures": {
      "source_index": 12,
      "index": 12,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "low_stake_threshold",
          "type_": "u64"
        },
        {
          "name": "very_low_stake_threshold",
          "type_": "u64"
        },
        {
          "name": "low_stake_grace_period",
          "type_": "u64"
        },
        {
          "name": "validator_report_records",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "vec_map"
                  },
                  "name": "VecMap",
                  "type_arguments": [
                    "address",
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000002",
                          "name": "vec_set"
                        },
                        "name": "VecSet",
                        "type_arguments": [
                          "address"
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "effectuate_staged_metadata": {
      "source_index": 13,
      "index": 13,
      "doc": " Effectutate pending next epoch metadata if they are staged.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "derive_reference_gas_price": {
      "source_index": 14,
      "index": 14,
      "doc": " Called by `sui_system` to derive reference gas price for the new epoch.\n Derive the reference gas price based on the gas price quote submitted by each validator.\n The returned gas price should be greater than or equal to 2/3 of the validators submitted\n gas price, weighted by stake.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "total_stake": {
      "source_index": 15,
      "index": 15,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "validator_total_stake_amount": {
      "source_index": 16,
      "index": 16,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_address",
          "type_": "address"
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "validator_stake_amount": {
      "source_index": 17,
      "index": 17,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_address",
          "type_": "address"
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "validator_voting_power": {
      "source_index": 18,
      "index": 18,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_address",
          "type_": "address"
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "validator_staking_pool_id": {
      "source_index": 19,
      "index": 19,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_address",
          "type_": "address"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "ID",
            "type_arguments": []
          }
        }
      ]
    },
    "staking_pool_mappings": {
      "source_index": 20,
      "index": 20,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "table"
                },
                "name": "Table",
                "type_arguments": [
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000002",
                        "name": "object"
                      },
                      "name": "ID",
                      "type_arguments": []
                    }
                  },
                  "address"
                ]
              }
            }
          ]
        }
      ]
    },
    "validator_address_by_pool_id": {
      "source_index": 21,
      "index": 21,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "pool_id",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "object"
                  },
                  "name": "ID",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "address"
      ]
    },
    "pool_exchange_rates": {
      "source_index": 22,
      "index": 22,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "pool_id",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "object"
                  },
                  "name": "ID",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "table"
                },
                "name": "Table",
                "type_arguments": [
                  "u64",
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000003",
                        "name": "staking_pool"
                      },
                      "name": "PoolTokenExchangeRate",
                      "type_arguments": []
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "next_epoch_validator_count": {
      "source_index": 23,
      "index": 23,
      "doc": " Get the total number of validators in the next epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "is_active_validator_by_sui_address": {
      "source_index": 24,
      "index": 24,
      "doc": " Returns true iff the address exists in active validators.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_address",
          "type_": "address"
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "is_duplicate_with_active_validator": {
      "source_index": 25,
      "index": 25,
      "doc": " Checks whether `new_validator` is duplicate with any currently active validators.\n It differs from `is_active_validator_by_sui_address` in that the former checks\n only the sui address but this function looks at more metadata.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "new_validator",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator"
                  },
                  "name": "Validator",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "is_duplicate_validator": {
      "source_index": 26,
      "index": 26,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "validators",
          "type_": {
            "Reference": [
              false,
              {
                "vector": {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000003",
                      "name": "validator"
                    },
                    "name": "Validator",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        },
        {
          "name": "new_validator",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator"
                  },
                  "name": "Validator",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "count_duplicates_vec": {
      "source_index": 27,
      "index": 27,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "validators",
          "type_": {
            "Reference": [
              false,
              {
                "vector": {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000003",
                      "name": "validator"
                    },
                    "name": "Validator",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        },
        {
          "name": "validator",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator"
                  },
                  "name": "Validator",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "is_duplicate_with_pending_validator": {
      "source_index": 28,
      "index": 28,
      "doc": " Checks whether `new_validator` is duplicate with any currently pending validators.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "new_validator",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator"
                  },
                  "name": "Validator",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "count_duplicates_tablevec": {
      "source_index": 29,
      "index": 29,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "validators",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "table_vec"
                  },
                  "name": "TableVec",
                  "type_arguments": [
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000003",
                          "name": "validator"
                        },
                        "name": "Validator",
                        "type_arguments": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "validator",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator"
                  },
                  "name": "Validator",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "get_candidate_or_active_validator_mut": {
      "source_index": 30,
      "index": 30,
      "doc": " Get mutable reference to either a candidate or an active validator by address.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_address",
          "type_": "address"
        }
      ],
      "return_": [
        {
          "Reference": [
            true,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000003",
                  "name": "validator"
                },
                "name": "Validator",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "find_validator": {
      "source_index": 31,
      "index": 31,
      "doc": " Find validator by `validator_address`, in `validators`.\n Returns (true, index) if the validator is found, and the index is its index in the list.\n If not found, returns (false, 0).",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "validators",
          "type_": {
            "Reference": [
              false,
              {
                "vector": {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000003",
                      "name": "validator"
                    },
                    "name": "Validator",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        },
        {
          "name": "validator_address",
          "type_": "address"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              "u64"
            ]
          }
        }
      ]
    },
    "find_validator_from_table_vec": {
      "source_index": 32,
      "index": 32,
      "doc": " Find validator by `validator_address`, in `validators`.\n Returns (true, index) if the validator is found, and the index is its index in the list.\n If not found, returns (false, 0).",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "validators",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "table_vec"
                  },
                  "name": "TableVec",
                  "type_arguments": [
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000003",
                          "name": "validator"
                        },
                        "name": "Validator",
                        "type_arguments": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "validator_address",
          "type_": "address"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "option"
            },
            "name": "Option",
            "type_arguments": [
              "u64"
            ]
          }
        }
      ]
    },
    "get_validator_indices": {
      "source_index": 33,
      "index": 33,
      "doc": " Given a vector of validator addresses, return their indices in the validator set.\n Aborts if any address isn't in the given validator set.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "validators",
          "type_": {
            "Reference": [
              false,
              {
                "vector": {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000003",
                      "name": "validator"
                    },
                    "name": "Validator",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        },
        {
          "name": "validator_addresses",
          "type_": {
            "Reference": [
              false,
              {
                "vector": "address"
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": "u64"
        }
      ]
    },
    "get_validator_mut": {
      "source_index": 34,
      "index": 34,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "validators",
          "type_": {
            "Reference": [
              true,
              {
                "vector": {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000003",
                      "name": "validator"
                    },
                    "name": "Validator",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        },
        {
          "name": "validator_address",
          "type_": "address"
        }
      ],
      "return_": [
        {
          "Reference": [
            true,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000003",
                  "name": "validator"
                },
                "name": "Validator",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "get_active_or_pending_or_candidate_validator_mut": {
      "source_index": 35,
      "index": 35,
      "doc": " Get mutable reference to an active or (if active does not exist) pending or (if pending and\n active do not exist) or candidate validator by address.\n Note: this function should be called carefully, only after verifying the transaction\n sender has the ability to modify the `Validator`.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_address",
          "type_": "address"
        },
        {
          "name": "include_candidate",
          "type_": "bool"
        }
      ],
      "return_": [
        {
          "Reference": [
            true,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000003",
                  "name": "validator"
                },
                "name": "Validator",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "get_validator_mut_with_verified_cap": {
      "source_index": 36,
      "index": 36,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "verified_cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_cap"
                  },
                  "name": "ValidatorOperationCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "include_candidate",
          "type_": "bool"
        }
      ],
      "return_": [
        {
          "Reference": [
            true,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000003",
                  "name": "validator"
                },
                "name": "Validator",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "get_validator_mut_with_ctx": {
      "source_index": 37,
      "index": 37,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            true,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000003",
                  "name": "validator"
                },
                "name": "Validator",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "get_validator_mut_with_ctx_including_candidates": {
      "source_index": 38,
      "index": 38,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            true,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000003",
                  "name": "validator"
                },
                "name": "Validator",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "get_validator_ref": {
      "source_index": 39,
      "index": 39,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "validators",
          "type_": {
            "Reference": [
              false,
              {
                "vector": {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000003",
                      "name": "validator"
                    },
                    "name": "Validator",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        },
        {
          "name": "validator_address",
          "type_": "address"
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000003",
                  "name": "validator"
                },
                "name": "Validator",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "get_active_or_pending_or_candidate_validator_ref": {
      "source_index": 40,
      "index": 40,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_address",
          "type_": "address"
        },
        {
          "name": "which_validator",
          "type_": "u8"
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000003",
                  "name": "validator"
                },
                "name": "Validator",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "get_active_validator_ref": {
      "source_index": 41,
      "index": 41,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_address",
          "type_": "address"
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000003",
                  "name": "validator"
                },
                "name": "Validator",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "get_pending_validator_ref": {
      "source_index": 42,
      "index": 42,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_address",
          "type_": "address"
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000003",
                  "name": "validator"
                },
                "name": "Validator",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "verify_cap": {
      "source_index": 43,
      "index": 43,
      "doc": " Verify the capability is valid for a Validator.\n If `active_validator_only` is true, only verify the Cap for an active validator.\n Otherwise, verify the Cap for au either active or pending validator.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_cap"
                  },
                  "name": "UnverifiedValidatorOperationCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "which_validator",
          "type_": "u8"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000003",
              "name": "validator_cap"
            },
            "name": "ValidatorOperationCap",
            "type_arguments": []
          }
        }
      ]
    },
    "process_pending_removals": {
      "source_index": 44,
      "index": 44,
      "doc": " Process the pending withdraw requests. For each pending request, the validator\n is removed from `validators` and its staking pool is put into the `inactive_validators` table.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_report_records",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "vec_map"
                  },
                  "name": "VecMap",
                  "type_arguments": [
                    "address",
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000002",
                          "name": "vec_set"
                        },
                        "name": "VecSet",
                        "type_arguments": [
                          "address"
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "process_validator_departure": {
      "source_index": 45,
      "index": 45,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000003",
                "name": "validator"
              },
              "name": "Validator",
              "type_arguments": []
            }
          }
        },
        {
          "name": "validator_report_records",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "vec_map"
                  },
                  "name": "VecMap",
                  "type_arguments": [
                    "address",
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000002",
                          "name": "vec_set"
                        },
                        "name": "VecSet",
                        "type_arguments": [
                          "address"
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "is_voluntary",
          "type_": "bool"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "clean_report_records_leaving_validator": {
      "source_index": 46,
      "index": 46,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "validator_report_records",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "vec_map"
                  },
                  "name": "VecMap",
                  "type_arguments": [
                    "address",
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000002",
                          "name": "vec_set"
                        },
                        "name": "VecSet",
                        "type_arguments": [
                          "address"
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "leaving_validator_addr",
          "type_": "address"
        }
      ],
      "return_": []
    },
    "process_pending_validators": {
      "source_index": 47,
      "index": 47,
      "doc": " Process the pending new validators. They are activated and inserted into `validators`.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "new_epoch",
          "type_": "u64"
        }
      ],
      "return_": []
    },
    "sort_removal_list": {
      "source_index": 48,
      "index": 48,
      "doc": " Sort all the pending removal indexes.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "withdraw_list",
          "type_": {
            "Reference": [
              true,
              {
                "vector": "u64"
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "process_pending_stakes_and_withdraws": {
      "source_index": 49,
      "index": 49,
      "doc": " Process all active validators' pending stake deposits and withdraws.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "validators",
          "type_": {
            "Reference": [
              true,
              {
                "vector": {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000003",
                      "name": "validator"
                    },
                    "name": "Validator",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "calculate_total_stakes": {
      "source_index": 50,
      "index": 50,
      "doc": " Calculate the total active validator stake.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "validators",
          "type_": {
            "Reference": [
              false,
              {
                "vector": {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000003",
                      "name": "validator"
                    },
                    "name": "Validator",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "adjust_stake_and_gas_price": {
      "source_index": 51,
      "index": 51,
      "doc": " Process the pending stake changes for each validator.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "validators",
          "type_": {
            "Reference": [
              true,
              {
                "vector": {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000003",
                      "name": "validator"
                    },
                    "name": "Validator",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "compute_reward_adjustments": {
      "source_index": 52,
      "index": 52,
      "doc": " Compute both the individual reward adjustments and total reward adjustment for staking rewards\n as well as storage fund rewards.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "slashed_validator_indices",
          "type_": {
            "vector": "u64"
          }
        },
        {
          "name": "reward_slashing_rate",
          "type_": "u64"
        },
        {
          "name": "unadjusted_staking_reward_amounts",
          "type_": {
            "Reference": [
              false,
              {
                "vector": "u64"
              }
            ]
          }
        },
        {
          "name": "unadjusted_storage_fund_reward_amounts",
          "type_": {
            "Reference": [
              false,
              {
                "vector": "u64"
              }
            ]
          }
        }
      ],
      "return_": [
        "u64",
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "vec_map"
            },
            "name": "VecMap",
            "type_arguments": [
              "u64",
              "u64"
            ]
          }
        },
        "u64",
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "vec_map"
            },
            "name": "VecMap",
            "type_arguments": [
              "u64",
              "u64"
            ]
          }
        }
      ]
    },
    "compute_slashed_validators": {
      "source_index": 53,
      "index": 53,
      "doc": " Process the validator report records of the epoch and return the addresses of the\n non-performant validators according to the input threshold.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "validator_report_records",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "vec_map"
              },
              "name": "VecMap",
              "type_arguments": [
                "address",
                {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000002",
                      "name": "vec_set"
                    },
                    "name": "VecSet",
                    "type_arguments": [
                      "address"
                    ]
                  }
                }
              ]
            }
          }
        }
      ],
      "return_": [
        {
          "vector": "address"
        }
      ]
    },
    "compute_unadjusted_reward_distribution": {
      "source_index": 54,
      "index": 54,
      "doc": " Given the current list of active validators, the total stake and total reward,\n calculate the amount of reward each validator should get, without taking into\n account the tallying rule results.\n Returns the unadjusted amounts of staking reward and storage fund reward for each validator.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "validators",
          "type_": {
            "Reference": [
              false,
              {
                "vector": {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000003",
                      "name": "validator"
                    },
                    "name": "Validator",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        },
        {
          "name": "total_voting_power",
          "type_": "u64"
        },
        {
          "name": "total_staking_reward",
          "type_": "u64"
        },
        {
          "name": "total_storage_fund_reward",
          "type_": "u64"
        }
      ],
      "return_": [
        {
          "vector": "u64"
        },
        {
          "vector": "u64"
        }
      ]
    },
    "compute_adjusted_reward_distribution": {
      "source_index": 55,
      "index": 55,
      "doc": " Use the reward adjustment info to compute the adjusted rewards each validator should get.\n Returns the staking rewards each validator gets and the storage fund rewards each validator gets.\n The staking rewards are shared with the stakers while the storage fund ones are not.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "validators",
          "type_": {
            "Reference": [
              false,
              {
                "vector": {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000003",
                      "name": "validator"
                    },
                    "name": "Validator",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        },
        {
          "name": "total_voting_power",
          "type_": "u64"
        },
        {
          "name": "total_slashed_validator_voting_power",
          "type_": "u64"
        },
        {
          "name": "unadjusted_staking_reward_amounts",
          "type_": {
            "vector": "u64"
          }
        },
        {
          "name": "unadjusted_storage_fund_reward_amounts",
          "type_": {
            "vector": "u64"
          }
        },
        {
          "name": "total_staking_reward_adjustment",
          "type_": "u64"
        },
        {
          "name": "individual_staking_reward_adjustments",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "vec_map"
              },
              "name": "VecMap",
              "type_arguments": [
                "u64",
                "u64"
              ]
            }
          }
        },
        {
          "name": "total_storage_fund_reward_adjustment",
          "type_": "u64"
        },
        {
          "name": "individual_storage_fund_reward_adjustments",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "vec_map"
              },
              "name": "VecMap",
              "type_arguments": [
                "u64",
                "u64"
              ]
            }
          }
        }
      ],
      "return_": [
        {
          "vector": "u64"
        },
        {
          "vector": "u64"
        }
      ]
    },
    "distribute_reward": {
      "source_index": 56,
      "index": 56,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "validators",
          "type_": {
            "Reference": [
              true,
              {
                "vector": {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000003",
                      "name": "validator"
                    },
                    "name": "Validator",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        },
        {
          "name": "adjusted_staking_reward_amounts",
          "type_": {
            "Reference": [
              false,
              {
                "vector": "u64"
              }
            ]
          }
        },
        {
          "name": "adjusted_storage_fund_reward_amounts",
          "type_": {
            "Reference": [
              false,
              {
                "vector": "u64"
              }
            ]
          }
        },
        {
          "name": "staking_rewards",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "balance"
                  },
                  "name": "Balance",
                  "type_arguments": [
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000002",
                          "name": "sui"
                        },
                        "name": "SUI",
                        "type_arguments": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "storage_fund_reward",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "balance"
                  },
                  "name": "Balance",
                  "type_arguments": [
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000002",
                          "name": "sui"
                        },
                        "name": "SUI",
                        "type_arguments": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "emit_validator_epoch_events": {
      "source_index": 57,
      "index": 57,
      "doc": " Emit events containing information of each validator for the epoch,\n including stakes, rewards, performance, etc.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "new_epoch",
          "type_": "u64"
        },
        {
          "name": "vs",
          "type_": {
            "Reference": [
              false,
              {
                "vector": {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000003",
                      "name": "validator"
                    },
                    "name": "Validator",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        },
        {
          "name": "pool_staking_reward_amounts",
          "type_": {
            "Reference": [
              false,
              {
                "vector": "u64"
              }
            ]
          }
        },
        {
          "name": "storage_fund_staking_reward_amounts",
          "type_": {
            "Reference": [
              false,
              {
                "vector": "u64"
              }
            ]
          }
        },
        {
          "name": "report_records",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "vec_map"
                  },
                  "name": "VecMap",
                  "type_arguments": [
                    "address",
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000002",
                          "name": "vec_set"
                        },
                        "name": "VecSet",
                        "type_arguments": [
                          "address"
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "slashed_validators",
          "type_": {
            "Reference": [
              false,
              {
                "vector": "address"
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "sum_voting_power_by_addresses": {
      "source_index": 58,
      "index": 58,
      "doc": " Sum up the total stake of a given list of validator addresses.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "vs",
          "type_": {
            "Reference": [
              false,
              {
                "vector": {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000003",
                      "name": "validator"
                    },
                    "name": "Validator",
                    "type_arguments": []
                  }
                }
              }
            ]
          }
        },
        {
          "name": "addresses",
          "type_": {
            "Reference": [
              false,
              {
                "vector": "address"
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "active_validators": {
      "source_index": 59,
      "index": 59,
      "doc": " Return the active validators in `self`",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "vector": {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator"
                  },
                  "name": "Validator",
                  "type_arguments": []
                }
              }
            }
          ]
        }
      ]
    },
    "is_validator_candidate": {
      "source_index": 60,
      "index": 60,
      "doc": " Returns true if the `addr` is a validator candidate.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "addr",
          "type_": "address"
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "is_inactive_validator": {
      "source_index": 61,
      "index": 61,
      "doc": " Returns true if the staking pool identified by `staking_pool_id` is of an inactive validator.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "staking_pool_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "active_validator_addresses": {
      "source_index": 62,
      "index": 62,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator_set"
                  },
                  "name": "ValidatorSet",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": "address"
        }
      ]
    }
  },
  "structs": {
    "ValidatorSet": {
      "index": 0,
      "doc": null,
      "attributes": [],
      "abilities": [
        "Store"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "total_stake": {
            "index": 0,
            "doc": " Total amount of stake from all active validators at the beginning of the epoch.",
            "type_": "u64"
          },
          "active_validators": {
            "index": 1,
            "doc": " The current list of active validators.",
            "type_": {
              "vector": {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000003",
                    "name": "validator"
                  },
                  "name": "Validator",
                  "type_arguments": []
                }
              }
            }
          },
          "pending_active_validators": {
            "index": 2,
            "doc": " List of new validator candidates added during the current epoch.\n They will be processed at the end of the epoch.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "table_vec"
                },
                "name": "TableVec",
                "type_arguments": [
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000003",
                        "name": "validator"
                      },
                      "name": "Validator",
                      "type_arguments": []
                    }
                  }
                ]
              }
            }
          },
          "pending_removals": {
            "index": 3,
            "doc": " Removal requests from the validators. Each element is an index\n pointing to `active_validators`.",
            "type_": {
              "vector": "u64"
            }
          },
          "staking_pool_mappings": {
            "index": 4,
            "doc": " Mappings from staking pool's ID to the sui address of a validator.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "table"
                },
                "name": "Table",
                "type_arguments": [
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000002",
                        "name": "object"
                      },
                      "name": "ID",
                      "type_arguments": []
                    }
                  },
                  "address"
                ]
              }
            }
          },
          "inactive_validators": {
            "index": 5,
            "doc": " Mapping from a staking pool ID to the inactive validator that has that pool as its staking pool.\n When a validator is deactivated the validator is removed from `active_validators` it\n is added to this table so that stakers can continue to withdraw their stake from it.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "table"
                },
                "name": "Table",
                "type_arguments": [
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000002",
                        "name": "object"
                      },
                      "name": "ID",
                      "type_arguments": []
                    }
                  },
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000003",
                        "name": "validator_wrapper"
                      },
                      "name": "ValidatorWrapper",
                      "type_arguments": []
                    }
                  }
                ]
              }
            }
          },
          "validator_candidates": {
            "index": 6,
            "doc": " Table storing preactive/candidate validators, mapping their addresses to their `Validator ` structs.\n When an address calls `request_add_validator_candidate`, they get added to this table and become a preactive\n validator.\n When the candidate has met the min stake requirement, they can call `request_add_validator` to\n officially add them to the active validator set `active_validators` next epoch.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "table"
                },
                "name": "Table",
                "type_arguments": [
                  "address",
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000003",
                        "name": "validator_wrapper"
                      },
                      "name": "ValidatorWrapper",
                      "type_arguments": []
                    }
                  }
                ]
              }
            }
          },
          "at_risk_validators": {
            "index": 7,
            "doc": " Table storing the number of epochs during which a validator's stake has been below the low stake threshold.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "vec_map"
                },
                "name": "VecMap",
                "type_arguments": [
                  "address",
                  "u64"
                ]
              }
            }
          },
          "extra_fields": {
            "index": 8,
            "doc": " Any extra fields that's not defined statically.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "bag"
                },
                "name": "Bag",
                "type_arguments": []
              }
            }
          }
        }
      }
    },
    "ValidatorEpochInfoEvent": {
      "index": 1,
      "doc": " Event containing staking and rewards related information of\n each validator, emitted during epoch advancement.",
      "attributes": [
        {
          "Parameterized": [
            "allow",
            [
              {
                "Name": "unused_field"
              }
            ]
          ]
        }
      ],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "validator_address": {
            "index": 1,
            "doc": null,
            "type_": "address"
          },
          "reference_gas_survey_quote": {
            "index": 2,
            "doc": null,
            "type_": "u64"
          },
          "stake": {
            "index": 3,
            "doc": null,
            "type_": "u64"
          },
          "commission_rate": {
            "index": 4,
            "doc": null,
            "type_": "u64"
          },
          "pool_staking_reward": {
            "index": 5,
            "doc": null,
            "type_": "u64"
          },
          "storage_fund_staking_reward": {
            "index": 6,
            "doc": null,
            "type_": "u64"
          },
          "pool_token_exchange_rate": {
            "index": 7,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000003",
                  "name": "staking_pool"
                },
                "name": "PoolTokenExchangeRate",
                "type_arguments": []
              }
            }
          },
          "tallying_rule_reporters": {
            "index": 8,
            "doc": null,
            "type_": {
              "vector": "address"
            }
          },
          "tallying_rule_global_score": {
            "index": 9,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    },
    "ValidatorEpochInfoEventV2": {
      "index": 2,
      "doc": " V2 of ValidatorEpochInfoEvent containing more information about the validator.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "validator_address": {
            "index": 1,
            "doc": null,
            "type_": "address"
          },
          "reference_gas_survey_quote": {
            "index": 2,
            "doc": null,
            "type_": "u64"
          },
          "stake": {
            "index": 3,
            "doc": null,
            "type_": "u64"
          },
          "voting_power": {
            "index": 4,
            "doc": null,
            "type_": "u64"
          },
          "commission_rate": {
            "index": 5,
            "doc": null,
            "type_": "u64"
          },
          "pool_staking_reward": {
            "index": 6,
            "doc": null,
            "type_": "u64"
          },
          "storage_fund_staking_reward": {
            "index": 7,
            "doc": null,
            "type_": "u64"
          },
          "pool_token_exchange_rate": {
            "index": 8,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000003",
                  "name": "staking_pool"
                },
                "name": "PoolTokenExchangeRate",
                "type_arguments": []
              }
            }
          },
          "tallying_rule_reporters": {
            "index": 9,
            "doc": null,
            "type_": {
              "vector": "address"
            }
          },
          "tallying_rule_global_score": {
            "index": 10,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    },
    "ValidatorJoinEvent": {
      "index": 3,
      "doc": " Event emitted every time a new validator joins the committee.\n The epoch value corresponds to the first epoch this change takes place.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "validator_address": {
            "index": 1,
            "doc": null,
            "type_": "address"
          },
          "staking_pool_id": {
            "index": 2,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "ID",
                "type_arguments": []
              }
            }
          }
        }
      }
    },
    "ValidatorLeaveEvent": {
      "index": 4,
      "doc": " Event emitted every time a validator leaves the committee.\n The epoch value corresponds to the first epoch this change takes place.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "epoch": {
            "index": 0,
            "doc": null,
            "type_": "u64"
          },
          "validator_address": {
            "index": 1,
            "doc": null,
            "type_": "address"
          },
          "staking_pool_id": {
            "index": 2,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "ID",
                "type_arguments": []
              }
            }
          },
          "is_voluntary": {
            "index": 3,
            "doc": null,
            "type_": "bool"
          }
        }
      }
    }
  },
  "enums": {}
}