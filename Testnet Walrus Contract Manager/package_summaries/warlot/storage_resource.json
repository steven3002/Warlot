{
  "doc": null,
  "immediate_dependencies": [
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "object"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "tx_context"
    }
  ],
  "attributes": [],
  "functions": {
    "start_epoch": {
      "source_index": 0,
      "index": 0,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_resource"
                  },
                  "name": "Storage",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u32"
      ]
    },
    "end_epoch": {
      "source_index": 1,
      "index": 1,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_resource"
                  },
                  "name": "Storage",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u32"
      ]
    },
    "size": {
      "source_index": 2,
      "index": 2,
      "doc": null,
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_resource"
                  },
                  "name": "Storage",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "create_storage": {
      "source_index": 3,
      "index": 3,
      "doc": " Constructor for [Storage] objects.\n Necessary to allow `walrus::system` to create storage objects.\n Cannot be called outside of the current module and [walrus::system].",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "start_epoch",
          "type_": "u32"
        },
        {
          "name": "end_epoch",
          "type_": "u32"
        },
        {
          "name": "storage_size",
          "type_": "u64"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "storage_resource"
            },
            "name": "Storage",
            "type_arguments": []
          }
        }
      ]
    },
    "extend_end_epoch": {
      "source_index": 4,
      "index": 4,
      "doc": " Extends the end epoch by `extendion_epochs` epochs.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_resource"
                  },
                  "name": "Storage",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "extension_epochs",
          "type_": "u32"
        }
      ],
      "return_": []
    },
    "split_by_epoch": {
      "source_index": 5,
      "index": 5,
      "doc": " Split the storage object into two based on `split_epoch`\n\n `storage` is modified to cover the period from `start_epoch` to `split_epoch`\n and a new storage object covering `split_epoch` to `end_epoch` is returned.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "storage",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_resource"
                  },
                  "name": "Storage",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "split_epoch",
          "type_": "u32"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "storage_resource"
            },
            "name": "Storage",
            "type_arguments": []
          }
        }
      ]
    },
    "split_by_size": {
      "source_index": 6,
      "index": 6,
      "doc": " Split the storage object into two based on `split_size`\n\n `storage` is modified to cover `split_size` and a new object covering\n `storage.storage_size - split_size` is created.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "storage",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_resource"
                  },
                  "name": "Storage",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "split_size",
          "type_": "u64"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "storage_resource"
            },
            "name": "Storage",
            "type_arguments": []
          }
        }
      ]
    },
    "fuse_periods": {
      "source_index": 7,
      "index": 7,
      "doc": " Fuse two storage objects that cover adjacent periods with the same storage size.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "first",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_resource"
                  },
                  "name": "Storage",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "second",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "storage_resource"
              },
              "name": "Storage",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "fuse_amount": {
      "source_index": 8,
      "index": 8,
      "doc": " Fuse two storage objects that cover the same period",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "first",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_resource"
                  },
                  "name": "Storage",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "second",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "storage_resource"
              },
              "name": "Storage",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "fuse": {
      "source_index": 9,
      "index": 9,
      "doc": " Fuse two storage objects that either cover the same period\n or adjacent periods with the same storage size.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "first",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_resource"
                  },
                  "name": "Storage",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "second",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "storage_resource"
              },
              "name": "Storage",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "destroy": {
      "source_index": 10,
      "index": 10,
      "doc": " Destructor for [Storage] objects",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "storage",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "storage_resource"
              },
              "name": "Storage",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    }
  },
  "structs": {
    "Storage": {
      "index": 0,
      "doc": " Reservation for storage for a given period, which is inclusive start, exclusive end.",
      "attributes": [],
      "abilities": [
        "Key",
        "Store"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "UID",
                "type_arguments": []
              }
            }
          },
          "start_epoch": {
            "index": 1,
            "doc": null,
            "type_": "u32"
          },
          "end_epoch": {
            "index": 2,
            "doc": null,
            "type_": "u32"
          },
          "storage_size": {
            "index": 3,
            "doc": null,
            "type_": "u64"
          }
        }
      }
    }
  },
  "enums": {}
}