{
  "doc": null,
  "immediate_dependencies": [
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "display"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "events"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "staking"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "system"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "upgrade"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "ascii"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "type_name"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "address"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "clock"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "object"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "package"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "transfer"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "tx_context"
    }
  ],
  "attributes": [],
  "functions": {
    "init": {
      "source_index": 0,
      "index": 0,
      "doc": " Init function, creates an init cap and transfers it to the sender.\n This allows the sender to call the function to actually initialize the system\n with the corresponding parameters. Once that function is called, the cap is destroyed.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "otw",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "init"
              },
              "name": "INIT",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "initialize_walrus": {
      "source_index": 1,
      "index": 1,
      "doc": " Function to initialize walrus and share the system and staking objects.\n This can only be called once, after which the `InitCap` is destroyed.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "init_cap",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "init"
              },
              "name": "InitCap",
              "type_arguments": []
            }
          }
        },
        {
          "name": "upgrade_cap",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "package"
              },
              "name": "UpgradeCap",
              "type_arguments": []
            }
          }
        },
        {
          "name": "epoch_zero_duration",
          "type_": "u64"
        },
        {
          "name": "epoch_duration",
          "type_": "u64"
        },
        {
          "name": "n_shards",
          "type_": "u16"
        },
        {
          "name": "max_epochs_ahead",
          "type_": "u32"
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "upgrade"
            },
            "name": "EmergencyUpgradeCap",
            "type_arguments": []
          }
        }
      ]
    },
    "migrate": {
      "source_index": 2,
      "index": 2,
      "doc": " Migrate the staking and system objects to the new package id.\n\n This must be called in the new package after an upgrade is committed\n to emit an event that informs all storage nodes and prevent previous package\n versions from being used.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "system",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    }
  },
  "structs": {
    "INIT": {
      "index": 0,
      "doc": " The OTW to create `Publisher` and `Display` objects.",
      "attributes": [],
      "abilities": [
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "dummy_field": {
            "index": 0,
            "type_": "bool"
          }
        }
      }
    },
    "InitCap": {
      "index": 1,
      "doc": " Must only be created by `init`.",
      "attributes": [],
      "abilities": [
        "Key",
        "Store"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "UID",
                "type_arguments": []
              }
            }
          },
          "publisher": {
            "index": 1,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "package"
                },
                "name": "Publisher",
                "type_arguments": []
              }
            }
          }
        }
      }
    }
  },
  "enums": {}
}