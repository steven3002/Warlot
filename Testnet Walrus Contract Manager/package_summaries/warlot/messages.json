{
  "doc": null,
  "immediate_dependencies": [
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "vector"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "bcs"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "bls12381"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "object"
    }
  ],
  "attributes": [],
  "functions": {
    "new_proof_of_possession_msg": {
      "source_index": 0,
      "index": 0,
      "doc": " Creates a new ProofOfPossessionMessage given the expected epoch, sui address and BLS key.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "epoch",
          "type_": "u32"
        },
        {
          "name": "sui_address",
          "type_": "address"
        },
        {
          "name": "bls_key",
          "type_": {
            "vector": "u8"
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "messages"
            },
            "name": "ProofOfPossessionMessage",
            "type_arguments": []
          }
        }
      ]
    },
    "to_bcs": {
      "source_index": 1,
      "index": 1,
      "doc": " BCS encodes a ProofOfPossessionMessage, considering the BLS key as a fixed-length byte\n array with 48 bytes.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "messages"
                  },
                  "name": "ProofOfPossessionMessage",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "vector": "u8"
        }
      ]
    },
    "verify_proof_of_possession": {
      "source_index": 2,
      "index": 2,
      "doc": " Verify the provided proof of possession using the contained public key and the provided\n signature.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "messages"
                  },
                  "name": "ProofOfPossessionMessage",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "pop_signature",
          "type_": {
            "vector": "u8"
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "new_certified_message": {
      "source_index": 3,
      "index": 3,
      "doc": " Creates a `CertifiedMessage` with support `stake_support` by parsing `message_bytes` and\n verifying the intent and the message epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "message_bytes",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "committee_epoch",
          "type_": "u32"
        },
        {
          "name": "stake_support",
          "type_": "u16"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "messages"
            },
            "name": "CertifiedMessage",
            "type_arguments": []
          }
        }
      ]
    },
    "certify_blob_message": {
      "source_index": 4,
      "index": 4,
      "doc": " Constructs the certified blob message, note that constructing\n implies a certified message, that is already checked.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "message",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "messages"
              },
              "name": "CertifiedMessage",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "messages"
            },
            "name": "CertifiedBlobMessage",
            "type_arguments": []
          }
        }
      ]
    },
    "certified_event_blob_message": {
      "source_index": 5,
      "index": 5,
      "doc": " Constructs the certified blob message, note this is only\n used for event blobs",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "blob_id",
          "type_": "u256"
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "messages"
            },
            "name": "CertifiedBlobMessage",
            "type_arguments": []
          }
        }
      ]
    },
    "invalid_blob_id_message": {
      "source_index": 6,
      "index": 6,
      "doc": " Construct the certified invalid Blob ID message, note that constructing\n implies a certified message, that is already checked.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "message",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "messages"
              },
              "name": "CertifiedMessage",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "messages"
            },
            "name": "CertifiedInvalidBlobId",
            "type_arguments": []
          }
        }
      ]
    },
    "deny_list_update_message": {
      "source_index": 7,
      "index": 7,
      "doc": " Construct the certified deny list update message, note that constructing\n implies a certified message, that is already checked.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "message",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "messages"
              },
              "name": "CertifiedMessage",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "messages"
            },
            "name": "DenyListUpdateMessage",
            "type_arguments": []
          }
        }
      ]
    },
    "deny_list_blob_deleted_message": {
      "source_index": 8,
      "index": 8,
      "doc": " Construct the deny list blob deleted message, note that constructing\n implies a certified message, that is already checked.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "message",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "messages"
              },
              "name": "CertifiedMessage",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "messages"
            },
            "name": "DenyListBlobDeleted",
            "type_arguments": []
          }
        }
      ]
    },
    "intent_type": {
      "source_index": 9,
      "index": 9,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "messages"
                  },
                  "name": "CertifiedMessage",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u8"
      ]
    },
    "intent_version": {
      "source_index": 10,
      "index": 10,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "messages"
                  },
                  "name": "CertifiedMessage",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u8"
      ]
    },
    "cert_epoch": {
      "source_index": 11,
      "index": 11,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "messages"
                  },
                  "name": "CertifiedMessage",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u32"
      ]
    },
    "stake_support": {
      "source_index": 12,
      "index": 12,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "messages"
                  },
                  "name": "CertifiedMessage",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u16"
      ]
    },
    "message": {
      "source_index": 13,
      "index": 13,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "messages"
                  },
                  "name": "CertifiedMessage",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "vector": "u8"
            }
          ]
        }
      ]
    },
    "into_message": {
      "source_index": 14,
      "index": 14,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "messages"
              },
              "name": "CertifiedMessage",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "vector": "u8"
        }
      ]
    },
    "certified_blob_id": {
      "source_index": 15,
      "index": 15,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "messages"
                  },
                  "name": "CertifiedBlobMessage",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u256"
      ]
    },
    "blob_persistence_type": {
      "source_index": 16,
      "index": 16,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "messages"
                  },
                  "name": "CertifiedBlobMessage",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "messages"
            },
            "name": "BlobPersistenceType",
            "type_arguments": []
          }
        }
      ]
    },
    "invalid_blob_id": {
      "source_index": 17,
      "index": 17,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "messages"
                  },
                  "name": "CertifiedInvalidBlobId",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u256"
      ]
    },
    "storage_node_id": {
      "source_index": 18,
      "index": 18,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "messages"
                  },
                  "name": "DenyListUpdateMessage",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "ID",
            "type_arguments": []
          }
        }
      ]
    },
    "sequence_number": {
      "source_index": 19,
      "index": 19,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "messages"
                  },
                  "name": "DenyListUpdateMessage",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "size": {
      "source_index": 20,
      "index": 20,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "messages"
                  },
                  "name": "DenyListUpdateMessage",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "root": {
      "source_index": 21,
      "index": 21,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "messages"
                  },
                  "name": "DenyListUpdateMessage",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u256"
      ]
    },
    "blob_id": {
      "source_index": 22,
      "index": 22,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "messages"
                  },
                  "name": "DenyListBlobDeleted",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u256"
      ]
    },
    "is_deletable": {
      "source_index": 23,
      "index": 23,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "messages"
                  },
                  "name": "BlobPersistenceType",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "object_id": {
      "source_index": 24,
      "index": 24,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "messages"
                  },
                  "name": "BlobPersistenceType",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "ID",
            "type_arguments": []
          }
        }
      ]
    },
    "peel_blob_persistence_type": {
      "source_index": 25,
      "index": 25,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "bcs",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "bcs"
                  },
                  "name": "BCS",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "messages"
            },
            "name": "BlobPersistenceType",
            "type_arguments": []
          }
        }
      ]
    }
  },
  "structs": {
    "ProofOfPossessionMessage": {
      "index": 0,
      "doc": " Message signed by a BLS key in the proof of possession.",
      "attributes": [],
      "abilities": [
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "intent_type": {
            "index": 0,
            "doc": null,
            "type_": "u8"
          },
          "intent_version": {
            "index": 1,
            "doc": null,
            "type_": "u8"
          },
          "intent_app": {
            "index": 2,
            "doc": null,
            "type_": "u8"
          },
          "epoch": {
            "index": 3,
            "doc": null,
            "type_": "u32"
          },
          "sui_address": {
            "index": 4,
            "doc": null,
            "type_": "address"
          },
          "bls_key": {
            "index": 5,
            "doc": null,
            "type_": {
              "vector": "u8"
            }
          }
        }
      }
    },
    "CertifiedMessage": {
      "index": 1,
      "doc": " A message certified by nodes holding `stake_support` shards.",
      "attributes": [],
      "abilities": [
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "intent_type": {
            "index": 0,
            "doc": null,
            "type_": "u8"
          },
          "intent_version": {
            "index": 1,
            "doc": null,
            "type_": "u8"
          },
          "cert_epoch": {
            "index": 2,
            "doc": null,
            "type_": "u32"
          },
          "message": {
            "index": 3,
            "doc": null,
            "type_": {
              "vector": "u8"
            }
          },
          "stake_support": {
            "index": 4,
            "doc": null,
            "type_": "u16"
          }
        }
      }
    },
    "CertifiedBlobMessage": {
      "index": 2,
      "doc": " Message type for certifying a blob.\n\n Constructed from a `CertifiedMessage`, states that `blob_id` has been certified in `epoch`\n by a quorum.",
      "attributes": [],
      "abilities": [
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "blob_id": {
            "index": 0,
            "doc": null,
            "type_": "u256"
          },
          "blob_persistence_type": {
            "index": 1,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000000",
                  "name": "messages"
                },
                "name": "BlobPersistenceType",
                "type_arguments": []
              }
            }
          }
        }
      }
    },
    "CertifiedInvalidBlobId": {
      "index": 3,
      "doc": " Message type for Invalid Blob Certificates.\n\n Constructed from a `CertifiedMessage`, states that `blob_id` has been marked as invalid\n in `epoch` by a quorum.",
      "attributes": [],
      "abilities": [
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "blob_id": {
            "index": 0,
            "doc": null,
            "type_": "u256"
          }
        }
      }
    },
    "DenyListUpdateMessage": {
      "index": 4,
      "doc": " Message type for DenyList updates.\n\n Constructed from a `CertifiedMessage`, states that the deny list has been updated in `epoch` for\n a given node.",
      "attributes": [],
      "abilities": [
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "storage_node_id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "ID",
                "type_arguments": []
              }
            }
          },
          "deny_list_sequence_number": {
            "index": 1,
            "doc": null,
            "type_": "u64"
          },
          "deny_list_size": {
            "index": 2,
            "doc": null,
            "type_": "u64"
          },
          "deny_list_root": {
            "index": 3,
            "doc": null,
            "type_": "u256"
          }
        }
      }
    },
    "DenyListBlobDeleted": {
      "index": 5,
      "doc": " Message type for deleting a blob that has been denylisted.\n\n Constructed from a `CertifiedMessage`, states that `blob_id` has been deleted in `epoch` by an\n f+1 quorum.",
      "attributes": [],
      "abilities": [
        "Drop"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "blob_id": {
            "index": 0,
            "doc": null,
            "type_": "u256"
          }
        }
      }
    }
  },
  "enums": {
    "BlobPersistenceType": {
      "index": 0,
      "doc": " The persistence type of a blob. Used for storage confirmation.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop"
      ],
      "type_parameters": [],
      "variants": {
        "Permanent": {
          "index": 0,
          "doc": null,
          "fields": {
            "positional_fields": false,
            "fields": {}
          }
        },
        "Deletable": {
          "index": 1,
          "doc": null,
          "fields": {
            "positional_fields": false,
            "fields": {
              "object_id": {
                "index": 0,
                "doc": null,
                "type_": {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000002",
                      "name": "object"
                    },
                    "name": "ID",
                    "type_arguments": []
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}