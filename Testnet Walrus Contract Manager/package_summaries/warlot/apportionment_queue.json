{
  "doc": " A custom priority queue implementation for use in the apportionment algorithm.\n This implementation uses a quotient-based priority with a tie-breaker to break ties when\n priorities are equal.",
  "immediate_dependencies": [
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "uq64_64"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "vector"
    }
  ],
  "attributes": [],
  "functions": {
    "new": {
      "source_index": 0,
      "index": 0,
      "doc": " Create a new priority queue.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "apportionment_queue"
            },
            "name": "ApportionmentQueue",
            "type_arguments": [
              {
                "NamedTypeParameter": "T"
              }
            ]
          }
        }
      ]
    },
    "pop_max": {
      "source_index": 1,
      "index": 1,
      "doc": " Pop the entry with the highest priority value.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "pq",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "apportionment_queue"
                  },
                  "name": "ApportionmentQueue",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000001",
              "name": "uq64_64"
            },
            "name": "UQ64_64",
            "type_arguments": []
          }
        },
        "u64",
        {
          "NamedTypeParameter": "T"
        }
      ]
    },
    "insert": {
      "source_index": 2,
      "index": 2,
      "doc": " Insert a new entry into the queue.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "pq",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "apportionment_queue"
                  },
                  "name": "ApportionmentQueue",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "priority",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "uq64_64"
              },
              "name": "UQ64_64",
              "type_arguments": []
            }
          }
        },
        {
          "name": "tie_breaker",
          "type_": "u64"
        },
        {
          "name": "value",
          "type_": {
            "NamedTypeParameter": "T"
          }
        }
      ],
      "return_": []
    },
    "bubble_down": {
      "source_index": 3,
      "index": 3,
      "doc": " Restore the max heap condition at the root node after popping the max element.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "elements",
          "type_": {
            "Reference": [
              true,
              {
                "vector": {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000000",
                      "name": "apportionment_queue"
                    },
                    "name": "Entry",
                    "type_arguments": [
                      {
                        "NamedTypeParameter": "T"
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "bubble_up": {
      "source_index": 4,
      "index": 4,
      "doc": " Restore the max heap condition after inserting a new element at the end of the entries.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "elements",
          "type_": {
            "Reference": [
              true,
              {
                "vector": {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000000",
                      "name": "apportionment_queue"
                    },
                    "name": "Entry",
                    "type_arguments": [
                      {
                        "NamedTypeParameter": "T"
                      }
                    ]
                  }
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "higher_priority_than": {
      "source_index": 5,
      "index": 5,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [
        {
          "name": "T",
          "constraints": []
        }
      ],
      "parameters": [
        {
          "name": "entry1",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "apportionment_queue"
                  },
                  "name": "Entry",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "entry2",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "apportionment_queue"
                  },
                  "name": "Entry",
                  "type_arguments": [
                    {
                      "NamedTypeParameter": "T"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    }
  },
  "structs": {
    "ApportionmentQueue": {
      "index": 0,
      "doc": " Struct representing a priority queue.",
      "attributes": [],
      "abilities": [
        "Drop"
      ],
      "type_parameters": [
        {
          "phantom": false,
          "name": "T",
          "constraints": []
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "entries": {
            "index": 0,
            "doc": " The `entries` vector contains a max heap, where the children of the node at index `i` are at\n indices `2 * i + 1` and `2 * i + 2`.\n INV: The parent node's priority is always higher or equal to its child nodes' priorities.",
            "type_": {
              "vector": {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "apportionment_queue"
                  },
                  "name": "Entry",
                  "type_arguments": [
                    {
                      "TypeParameter": 0
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "Entry": {
      "index": 1,
      "doc": null,
      "attributes": [],
      "abilities": [
        "Drop"
      ],
      "type_parameters": [
        {
          "phantom": false,
          "name": "T",
          "constraints": []
        }
      ],
      "fields": {
        "positional_fields": false,
        "fields": {
          "priority": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "uq64_64"
                },
                "name": "UQ64_64",
                "type_arguments": []
              }
            }
          },
          "tie_breaker": {
            "index": 1,
            "doc": null,
            "type_": "u64"
          },
          "value": {
            "index": 2,
            "doc": null,
            "type_": {
              "TypeParameter": 0
            }
          }
        }
      }
    }
  },
  "enums": {}
}