{
  "doc": null,
  "immediate_dependencies": [
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "active_set"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "apportionment_queue"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "auth"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "bls_aggregate"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "committee"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "epoch_parameters"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "events"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "extended_field"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "node_metadata"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "staked_wal"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "staking_pool"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "storage_node"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "wal"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "walrus_context"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "option"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "string"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "u128"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "u64"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "uq64_64"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "vector"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "balance"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "bls12381"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "clock"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "coin"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "group_ops"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "object"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "object_table"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "priority_queue"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "tx_context"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "vec_map"
    }
  ],
  "attributes": [],
  "functions": {
    "new": {
      "source_index": 0,
      "index": 0,
      "doc": " Creates a new `StakingInnerV1` object with default values.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "epoch_zero_duration",
          "type_": "u64"
        },
        {
          "name": "epoch_duration",
          "type_": "u64"
        },
        {
          "name": "n_shards",
          "type_": "u16"
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "staking_inner"
            },
            "name": "StakingInnerV1",
            "type_arguments": []
          }
        }
      ]
    },
    "create_pool": {
      "source_index": 1,
      "index": 1,
      "doc": " Creates a new staking pool with the given `commission_rate`.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "name",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "network_address",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "metadata",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "node_metadata"
              },
              "name": "NodeMetadata",
              "type_arguments": []
            }
          }
        },
        {
          "name": "public_key",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "network_public_key",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "proof_of_possession",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "commission_rate",
          "type_": "u16"
        },
        {
          "name": "storage_price",
          "type_": "u64"
        },
        {
          "name": "write_price",
          "type_": "u64"
        },
        {
          "name": "node_capacity",
          "type_": "u64"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "ID",
            "type_arguments": []
          }
        }
      ]
    },
    "set_commission_receiver": {
      "source_index": 2,
      "index": 2,
      "doc": " Sets the commission receiver for the pool.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "auth",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "auth"
              },
              "name": "Authenticated",
              "type_arguments": []
            }
          }
        },
        {
          "name": "receiver",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "auth"
              },
              "name": "Authorized",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "collect_commission": {
      "source_index": 3,
      "index": 3,
      "doc": " Collect commission for the pool using the `StorageNodeCap`.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "auth",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "auth"
              },
              "name": "Authenticated",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "balance"
            },
            "name": "Balance",
            "type_arguments": [
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "wal"
                  },
                  "name": "WAL",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ]
    },
    "voting_end": {
      "source_index": 4,
      "index": 4,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "select_committee_and_calculate_votes": {
      "source_index": 5,
      "index": 5,
      "doc": " Selects the committee for the next epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "quorum_above": {
      "source_index": 6,
      "index": 6,
      "doc": " Take the highest value, s.t. a quorum (2f + 1) voted for a value larger or equal to this.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "vote_queue",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "priority_queue"
                  },
                  "name": "PriorityQueue",
                  "type_arguments": [
                    "u64"
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "n_shards",
          "type_": "u16"
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "quorum_below": {
      "source_index": 7,
      "index": 7,
      "doc": " Take the lowest value, s.t. a quorum  (2f + 1) voted for a value lower or equal to this.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "vote_queue",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "priority_queue"
                  },
                  "name": "PriorityQueue",
                  "type_arguments": [
                    "u64"
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "n_shards",
          "type_": "u16"
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "set_governance_authorized": {
      "source_index": 8,
      "index": 8,
      "doc": " Sets the governance authorized object for the pool.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "auth",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "auth"
              },
              "name": "Authenticated",
              "type_arguments": []
            }
          }
        },
        {
          "name": "authorized",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "auth"
              },
              "name": "Authorized",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "check_governance_authorization": {
      "source_index": 9,
      "index": 9,
      "doc": " Checks if the governance authorized object matches the authenticated object.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "auth",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "auth"
              },
              "name": "Authenticated",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "get_current_node_weight": {
      "source_index": 10,
      "index": 10,
      "doc": " Returns the current node weight for the given node id.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        "u16"
      ]
    },
    "set_next_commission": {
      "source_index": 11,
      "index": 11,
      "doc": " Sets the next commission rate for the pool.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "commission_rate",
          "type_": "u16"
        }
      ],
      "return_": []
    },
    "set_storage_price_vote": {
      "source_index": 12,
      "index": 12,
      "doc": " Sets the storage price vote for the pool.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "storage_price",
          "type_": "u64"
        }
      ],
      "return_": []
    },
    "set_write_price_vote": {
      "source_index": 13,
      "index": 13,
      "doc": " Sets the write price vote for the pool.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "write_price",
          "type_": "u64"
        }
      ],
      "return_": []
    },
    "set_node_capacity_vote": {
      "source_index": 14,
      "index": 14,
      "doc": " Sets the node capacity vote for the pool.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_capacity",
          "type_": "u64"
        }
      ],
      "return_": []
    },
    "set_next_public_key": {
      "source_index": 15,
      "index": 15,
      "doc": " Sets the public key of a node to be used starting from the next epoch for which the node is\n selected.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "public_key",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "proof_of_possession",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "set_name": {
      "source_index": 16,
      "index": 16,
      "doc": " Sets the name of a storage node.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "name",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "set_network_address": {
      "source_index": 17,
      "index": 17,
      "doc": " Sets the network address or host of a storage node.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "network_address",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "set_network_public_key": {
      "source_index": 18,
      "index": 18,
      "doc": " Sets the public key used for TLS communication for a node.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "network_public_key",
          "type_": {
            "vector": "u8"
          }
        }
      ],
      "return_": []
    },
    "set_node_metadata": {
      "source_index": 19,
      "index": 19,
      "doc": " Sets the metadata of a storage node.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "metadata",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "node_metadata"
              },
              "name": "NodeMetadata",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "destroy_empty_pool": {
      "source_index": 20,
      "index": 20,
      "doc": " Destroys the pool if it is empty, after the last stake has been withdrawn.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "_ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "stake_with_pool": {
      "source_index": 21,
      "index": 21,
      "doc": " Stakes the given amount of `T` with the pool, returning the `StakedWal`.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "to_stake",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "coin"
              },
              "name": "Coin",
              "type_arguments": [
                {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000000",
                      "name": "wal"
                    },
                    "name": "WAL",
                    "type_arguments": []
                  }
                }
              ]
            }
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "staked_wal"
            },
            "name": "StakedWal",
            "type_arguments": []
          }
        }
      ]
    },
    "request_withdraw_stake": {
      "source_index": 22,
      "index": 22,
      "doc": " Requests withdrawal of the given amount from the `StakedWAL`, marking it as\n `Withdrawing`. Once the epoch is greater than the `withdraw_epoch`, the\n withdrawal can be performed.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "staked_wal",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staked_wal"
                  },
                  "name": "StakedWal",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "_ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "withdraw_stake": {
      "source_index": 23,
      "index": 23,
      "doc": " Perform the withdrawal of the staked WAL, returning the amount to the caller.\n The `StakedWal` must be in the `Withdrawing` state, and the epoch must be\n greater than the `withdraw_epoch`.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "staked_wal",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "staked_wal"
              },
              "name": "StakedWal",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "Coin",
            "type_arguments": [
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "wal"
                  },
                  "name": "WAL",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ]
    },
    "try_join_active_set": {
      "source_index": 24,
      "index": 24,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "compute_next_committee": {
      "source_index": 25,
      "index": 25,
      "doc": " Computes the committee for the next epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "committee"
            },
            "name": "Committee",
            "type_arguments": []
          }
        }
      ]
    },
    "apportionment": {
      "source_index": 26,
      "index": 26,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "vec_map"
            },
            "name": "VecMap",
            "type_arguments": [
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "object"
                  },
                  "name": "ID",
                  "type_arguments": []
                }
              },
              "u16"
            ]
          }
        }
      ]
    },
    "dhondt": {
      "source_index": 27,
      "index": 27,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "node_priorities",
          "type_": {
            "vector": "u64"
          }
        },
        {
          "name": "n_shards",
          "type_": "u16"
        },
        {
          "name": "stake",
          "type_": {
            "vector": "u64"
          }
        }
      ],
      "return_": [
        {
          "vector": "u16"
        }
      ]
    },
    "max_shards_per_node": {
      "source_index": 28,
      "index": 28,
      "doc": " Returns the maximum number of shards per node.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "n_nodes",
          "type_": "u64"
        },
        {
          "name": "n_shards",
          "type_": "u64"
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "initiate_epoch_change": {
      "source_index": 29,
      "index": 29,
      "doc": " Initiates the epoch change if the current time allows.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "rewards",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "vec_map"
              },
              "name": "VecMap",
              "type_arguments": [
                {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000002",
                      "name": "object"
                    },
                    "name": "ID",
                    "type_arguments": []
                  }
                },
                {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000002",
                      "name": "balance"
                    },
                    "name": "Balance",
                    "type_arguments": [
                      {
                        "Datatype": {
                          "module": {
                            "address": "0000000000000000000000000000000000000000000000000000000000000000",
                            "name": "wal"
                          },
                          "name": "WAL",
                          "type_arguments": []
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      ],
      "return_": []
    },
    "advance_epoch": {
      "source_index": 30,
      "index": 30,
      "doc": " Sets the next epoch of the system and emits the epoch change start event.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "rewards",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "vec_map"
              },
              "name": "VecMap",
              "type_arguments": [
                {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000002",
                      "name": "object"
                    },
                    "name": "ID",
                    "type_arguments": []
                  }
                },
                {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000002",
                      "name": "balance"
                    },
                    "name": "Balance",
                    "type_arguments": [
                      {
                        "Datatype": {
                          "module": {
                            "address": "0000000000000000000000000000000000000000000000000000000000000000",
                            "name": "wal"
                          },
                          "name": "WAL",
                          "type_arguments": []
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      ],
      "return_": []
    },
    "epoch_sync_done": {
      "source_index": 31,
      "index": 31,
      "doc": " Signals to the contract that the node has received all its shards for the new epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "epoch",
          "type_": "u32"
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "node_metadata": {
      "source_index": 32,
      "index": 32,
      "doc": " Returns the metadata of the node with the given `ID`.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "node_metadata"
            },
            "name": "NodeMetadata",
            "type_arguments": []
          }
        }
      ]
    },
    "next_committee": {
      "source_index": 33,
      "index": 33,
      "doc": " Returns the Option with next committee.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000000",
                        "name": "committee"
                      },
                      "name": "Committee",
                      "type_arguments": []
                    }
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "next_epoch_params": {
      "source_index": 34,
      "index": 34,
      "doc": " Returns the next epoch parameters if set, otherwise aborts with an error.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000000",
                  "name": "epoch_parameters"
                },
                "name": "EpochParams",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "epoch": {
      "source_index": 35,
      "index": 35,
      "doc": " Get the current epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u32"
      ]
    },
    "committee": {
      "source_index": 36,
      "index": 36,
      "doc": " Get the current committee.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000000",
                  "name": "committee"
                },
                "name": "Committee",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "previous_committee": {
      "source_index": 37,
      "index": 37,
      "doc": " Get the previous committee.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000000",
                  "name": "committee"
                },
                "name": "Committee",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "next_bls_committee": {
      "source_index": 38,
      "index": 38,
      "doc": " Construct the BLS committee for the next epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "bls_aggregate"
            },
            "name": "BlsCommittee",
            "type_arguments": []
          }
        }
      ]
    },
    "has_pool": {
      "source_index": 39,
      "index": 39,
      "doc": " Check if a node with the given `ID` exists in the staking pools.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "n_shards": {
      "source_index": 40,
      "index": 40,
      "doc": " Returns the total number of shards.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u16"
      ]
    },
    "calculate_rewards": {
      "source_index": 41,
      "index": 41,
      "doc": " Calculate the rewards for an amount with value `staked_principal`, staked in the pool with\n the given `node_id` between `activation_epoch` and `withdraw_epoch`.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "staked_principal",
          "type_": "u64"
        },
        {
          "name": "activation_epoch",
          "type_": "u32"
        },
        {
          "name": "withdraw_epoch",
          "type_": "u32"
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "can_withdraw_staked_wal_early": {
      "source_index": 42,
      "index": 42,
      "doc": " Check whether StakedWal can be withdrawn directly.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "sw",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staked_wal"
                  },
                  "name": "StakedWal",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "new_walrus_context": {
      "source_index": 43,
      "index": 43,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "walrus_context"
            },
            "name": "WalrusContext",
            "type_arguments": []
          }
        }
      ]
    },
    "is_quorum": {
      "source_index": 44,
      "index": 44,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking_inner"
                  },
                  "name": "StakingInnerV1",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "weight",
          "type_": "u16"
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "is_quorum_for_n_shards": {
      "source_index": 45,
      "index": 45,
      "doc": null,
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "weight",
          "type_": "u64"
        },
        {
          "name": "n_shards",
          "type_": "u64"
        }
      ],
      "return_": [
        "bool"
      ]
    }
  },
  "structs": {
    "StakingInnerV1": {
      "index": 0,
      "doc": " The inner object for the staking part of the system.",
      "attributes": [],
      "abilities": [
        "Store"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "n_shards": {
            "index": 0,
            "doc": " The number of shards in the system.",
            "type_": "u16"
          },
          "epoch_duration": {
            "index": 1,
            "doc": " The duration of an epoch in ms. Does not affect the first (zero) epoch.",
            "type_": "u64"
          },
          "first_epoch_start": {
            "index": 2,
            "doc": " Special parameter, used only for the first epoch. The timestamp when the\n first epoch can be started.",
            "type_": "u64"
          },
          "pools": {
            "index": 3,
            "doc": " Stored staking pools, each identified by a unique `ID` and contains\n the `StakingPool` object. Uses `ObjectTable` to make the pool discovery\n easier by avoiding wrapping.\n\n The key is the ID of the staking pool.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object_table"
                },
                "name": "ObjectTable",
                "type_arguments": [
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000002",
                        "name": "object"
                      },
                      "name": "ID",
                      "type_arguments": []
                    }
                  },
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000000",
                        "name": "staking_pool"
                      },
                      "name": "StakingPool",
                      "type_arguments": []
                    }
                  }
                ]
              }
            }
          },
          "epoch": {
            "index": 4,
            "doc": " The current epoch of the Walrus system. The epochs are not the same as\n the Sui epochs, not to be mistaken with `ctx.epoch()`.",
            "type_": "u32"
          },
          "active_set": {
            "index": 5,
            "doc": " Stores the active set of storage nodes. Tracks the total amount of staked WAL.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000000",
                  "name": "extended_field"
                },
                "name": "ExtendedField",
                "type_arguments": [
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000000",
                        "name": "active_set"
                      },
                      "name": "ActiveSet",
                      "type_arguments": []
                    }
                  }
                ]
              }
            }
          },
          "next_committee": {
            "index": 6,
            "doc": " The next committee in the system.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000000",
                        "name": "committee"
                      },
                      "name": "Committee",
                      "type_arguments": []
                    }
                  }
                ]
              }
            }
          },
          "committee": {
            "index": 7,
            "doc": " The current committee in the system.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000000",
                  "name": "committee"
                },
                "name": "Committee",
                "type_arguments": []
              }
            }
          },
          "previous_committee": {
            "index": 8,
            "doc": " The previous committee in the system.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000000",
                  "name": "committee"
                },
                "name": "Committee",
                "type_arguments": []
              }
            }
          },
          "next_epoch_params": {
            "index": 9,
            "doc": " The next epoch parameters.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000000",
                        "name": "epoch_parameters"
                      },
                      "name": "EpochParams",
                      "type_arguments": []
                    }
                  }
                ]
              }
            }
          },
          "epoch_state": {
            "index": 10,
            "doc": " The state of the current epoch.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000000",
                  "name": "staking_inner"
                },
                "name": "EpochState",
                "type_arguments": []
              }
            }
          },
          "next_epoch_public_keys": {
            "index": 11,
            "doc": " The public keys for the next epoch. The keys are stored in a sorted `VecMap`, and mirror\n the order of the nodes in the `next_committee`. The value is set in the `select_committee`\n function and consumed in the `next_bls_committee` function.",
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000000",
                  "name": "extended_field"
                },
                "name": "ExtendedField",
                "type_arguments": [
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000002",
                        "name": "vec_map"
                      },
                      "name": "VecMap",
                      "type_arguments": [
                        {
                          "Datatype": {
                            "module": {
                              "address": "0000000000000000000000000000000000000000000000000000000000000002",
                              "name": "object"
                            },
                            "name": "ID",
                            "type_arguments": []
                          }
                        },
                        {
                          "Datatype": {
                            "module": {
                              "address": "0000000000000000000000000000000000000000000000000000000000000002",
                              "name": "group_ops"
                            },
                            "name": "Element",
                            "type_arguments": [
                              {
                                "Datatype": {
                                  "module": {
                                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                                    "name": "bls12381"
                                  },
                                  "name": "UncompressedG1",
                                  "type_arguments": []
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
      }
    }
  },
  "enums": {
    "EpochState": {
      "index": 0,
      "doc": " The epoch state.",
      "attributes": [],
      "abilities": [
        "Copy",
        "Drop",
        "Store"
      ],
      "type_parameters": [],
      "variants": {
        "EpochChangeSync": {
          "index": 0,
          "doc": null,
          "fields": {
            "positional_fields": true,
            "fields": {
              "pos0": {
                "index": 0,
                "doc": null,
                "type_": "u16"
              }
            }
          }
        },
        "EpochChangeDone": {
          "index": 1,
          "doc": null,
          "fields": {
            "positional_fields": true,
            "fields": {
              "pos0": {
                "index": 0,
                "doc": null,
                "type_": "u64"
              }
            }
          }
        },
        "NextParamsSelected": {
          "index": 2,
          "doc": null,
          "fields": {
            "positional_fields": true,
            "fields": {
              "pos0": {
                "index": 0,
                "doc": null,
                "type_": "u64"
              }
            }
          }
        }
      }
    }
  }
}