{
  "doc": " Module: system",
  "immediate_dependencies": [
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "blob"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "bls_aggregate"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "epoch_parameters"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "storage_node"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "storage_resource"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "system_state_inner"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "wal"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "option"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "balance"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "coin"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "dynamic_field"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "object"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "transfer"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "tx_context"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "vec_map"
    }
  ],
  "attributes": [
    {
      "Parameterized": [
        "allow",
        [
          {
            "Name": "unused_field"
          },
          {
            "Name": "unused_function"
          },
          {
            "Name": "unused_mut_parameter"
          },
          {
            "Name": "unused_variable"
          }
        ]
      ]
    }
  ],
  "functions": {
    "create_empty": {
      "source_index": 0,
      "index": 0,
      "doc": " Creates and shares an empty system object.\n Must only be called by the initialization function.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "max_epochs_ahead",
          "type_": "u32"
        },
        {
          "name": "package_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "invalidate_blob_id": {
      "source_index": 1,
      "index": 1,
      "doc": " Marks blob as invalid given an invalid blob certificate.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "system",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "signature",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "members_bitmap",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "message",
          "type_": {
            "vector": "u8"
          }
        }
      ],
      "return_": [
        "u256"
      ]
    },
    "certify_event_blob": {
      "source_index": 2,
      "index": 2,
      "doc": " Certifies a blob containing Walrus events.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "system",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "blob_id",
          "type_": "u256"
        },
        {
          "name": "root_hash",
          "type_": "u256"
        },
        {
          "name": "size",
          "type_": "u64"
        },
        {
          "name": "encoding_type",
          "type_": "u8"
        },
        {
          "name": "ending_checkpoint_sequence_num",
          "type_": "u64"
        },
        {
          "name": "epoch",
          "type_": "u32"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "reserve_space": {
      "source_index": 3,
      "index": 3,
      "doc": " Allows buying a storage reservation for a given period of epochs.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "storage_amount",
          "type_": "u64"
        },
        {
          "name": "epochs_ahead",
          "type_": "u32"
        },
        {
          "name": "payment",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "Coin",
                  "type_arguments": [
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000000",
                          "name": "wal"
                        },
                        "name": "WAL",
                        "type_arguments": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "storage_resource"
            },
            "name": "Storage",
            "type_arguments": []
          }
        }
      ]
    },
    "register_blob": {
      "source_index": 4,
      "index": 4,
      "doc": " Registers a new blob in the system.\n `size` is the size of the unencoded blob. The reserved space in `storage` must be at\n least the size of the encoded blob.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "storage",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "storage_resource"
              },
              "name": "Storage",
              "type_arguments": []
            }
          }
        },
        {
          "name": "blob_id",
          "type_": "u256"
        },
        {
          "name": "root_hash",
          "type_": "u256"
        },
        {
          "name": "size",
          "type_": "u64"
        },
        {
          "name": "encoding_type",
          "type_": "u8"
        },
        {
          "name": "deletable",
          "type_": "bool"
        },
        {
          "name": "write_payment",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "Coin",
                  "type_arguments": [
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000000",
                          "name": "wal"
                        },
                        "name": "WAL",
                        "type_arguments": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "blob"
            },
            "name": "Blob",
            "type_arguments": []
          }
        }
      ]
    },
    "certify_blob": {
      "source_index": 5,
      "index": 5,
      "doc": " Certify that a blob will be available in the storage system until the end epoch of the\n storage associated with it.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "blob",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "blob"
                  },
                  "name": "Blob",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "signature",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "signers_bitmap",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "message",
          "type_": {
            "vector": "u8"
          }
        }
      ],
      "return_": []
    },
    "delete_blob": {
      "source_index": 6,
      "index": 6,
      "doc": " Deletes a deletable blob and returns the contained storage resource.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "blob",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "blob"
              },
              "name": "Blob",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "storage_resource"
            },
            "name": "Storage",
            "type_arguments": []
          }
        }
      ]
    },
    "extend_blob_with_resource": {
      "source_index": 7,
      "index": 7,
      "doc": " Extend the period of validity of a blob with a new storage resource.\n The new storage resource must be the same size as the storage resource\n used in the blob, and have a longer period of validity.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "blob",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "blob"
                  },
                  "name": "Blob",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "extension",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "storage_resource"
              },
              "name": "Storage",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "extend_blob": {
      "source_index": 8,
      "index": 8,
      "doc": " Extend the period of validity of a blob by extending its contained storage resource\n by `extended_epochs` epochs.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "blob",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "blob"
                  },
                  "name": "Blob",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "extended_epochs",
          "type_": "u32"
        },
        {
          "name": "payment",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "coin"
                  },
                  "name": "Coin",
                  "type_arguments": [
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000000",
                          "name": "wal"
                        },
                        "name": "WAL",
                        "type_arguments": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "add_subsidy": {
      "source_index": 9,
      "index": 9,
      "doc": " Adds rewards to the system for the specified number of epochs ahead.\n The rewards are split equally across the future accounting ring buffer up to the\n specified epoch.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "system",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "subsidy",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "coin"
              },
              "name": "Coin",
              "type_arguments": [
                {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000000",
                      "name": "wal"
                    },
                    "name": "WAL",
                    "type_arguments": []
                  }
                }
              ]
            }
          }
        },
        {
          "name": "epochs_ahead",
          "type_": "u32"
        }
      ],
      "return_": []
    },
    "register_deny_list_update": {
      "source_index": 10,
      "index": 10,
      "doc": " Register a deny list update.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "deny_list_root",
          "type_": "u256"
        },
        {
          "name": "deny_list_sequence",
          "type_": "u64"
        }
      ],
      "return_": []
    },
    "update_deny_list": {
      "source_index": 11,
      "index": 11,
      "doc": " Perform the update of the deny list.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "signature",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "members_bitmap",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "message",
          "type_": {
            "vector": "u8"
          }
        }
      ],
      "return_": []
    },
    "delete_deny_listed_blob": {
      "source_index": 12,
      "index": 12,
      "doc": " Delete a blob that is deny listed by f+1 members.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "signature",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "members_bitmap",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "message",
          "type_": {
            "vector": "u8"
          }
        }
      ],
      "return_": []
    },
    "epoch": {
      "source_index": 13,
      "index": 13,
      "doc": " Get epoch. Uses the committee to get the epoch.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u32"
      ]
    },
    "total_capacity_size": {
      "source_index": 14,
      "index": 14,
      "doc": " Accessor for total capacity size.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "used_capacity_size": {
      "source_index": 15,
      "index": 15,
      "doc": " Accessor for used capacity size.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "n_shards": {
      "source_index": 16,
      "index": 16,
      "doc": " Accessor for the number of shards.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u16"
      ]
    },
    "advance_epoch": {
      "source_index": 17,
      "index": 17,
      "doc": " Update epoch to next epoch, and update the committee, price and capacity.\n\n Called by the epoch change function that connects `Staking` and `System`. Returns\n the balance of the rewards from the previous epoch.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "new_committee",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "bls_aggregate"
              },
              "name": "BlsCommittee",
              "type_arguments": []
            }
          }
        },
        {
          "name": "new_epoch_params",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "epoch_parameters"
                  },
                  "name": "EpochParams",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "vec_map"
            },
            "name": "VecMap",
            "type_arguments": [
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "object"
                  },
                  "name": "ID",
                  "type_arguments": []
                }
              },
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "balance"
                  },
                  "name": "Balance",
                  "type_arguments": [
                    {
                      "Datatype": {
                        "module": {
                          "address": "0000000000000000000000000000000000000000000000000000000000000000",
                          "name": "wal"
                        },
                        "name": "WAL",
                        "type_arguments": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "package_id": {
      "source_index": 18,
      "index": 18,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "system",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "ID",
            "type_arguments": []
          }
        }
      ]
    },
    "version": {
      "source_index": 19,
      "index": 19,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "system",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "set_new_package_id": {
      "source_index": 20,
      "index": 20,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "system",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "new_package_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "migrate": {
      "source_index": 21,
      "index": 21,
      "doc": " Migrate the system object to the new package id.\n\n This function sets the new package id and version and can be modified in future versions\n to migrate changes in the `system_state_inner` object if needed.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "system",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "inner_mut": {
      "source_index": 22,
      "index": 22,
      "doc": " Get a mutable reference to `SystemStateInner` from the `System`.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "system",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            true,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000000",
                  "name": "system_state_inner"
                },
                "name": "SystemStateInnerV1",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "inner": {
      "source_index": 23,
      "index": 23,
      "doc": " Get an immutable reference to `SystemStateInner` from the `System`.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "system",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000000",
                  "name": "system_state_inner"
                },
                "name": "SystemStateInnerV1",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    }
  },
  "structs": {
    "System": {
      "index": 0,
      "doc": " The one and only system object.",
      "attributes": [],
      "abilities": [
        "Key"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "UID",
                "type_arguments": []
              }
            }
          },
          "version": {
            "index": 1,
            "doc": null,
            "type_": "u64"
          },
          "package_id": {
            "index": 2,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "ID",
                "type_arguments": []
              }
            }
          },
          "new_package_id": {
            "index": 3,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000002",
                        "name": "object"
                      },
                      "name": "ID",
                      "type_arguments": []
                    }
                  }
                ]
              }
            }
          }
        }
      }
    }
  },
  "enums": {}
}