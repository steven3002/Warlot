{
  "doc": " Module: staking",
  "immediate_dependencies": [
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "auth"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "bls_aggregate"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "committee"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "epoch_parameters"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "node_metadata"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "staked_wal"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "staking_inner"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "storage_node"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "system"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000000",
      "name": "wal"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "option"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000001",
      "name": "string"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "balance"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "clock"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "coin"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "dynamic_field"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "object"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "transfer"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "tx_context"
    },
    {
      "address": "0000000000000000000000000000000000000000000000000000000000000002",
      "name": "vec_map"
    }
  ],
  "attributes": [
    {
      "Parameterized": [
        "allow",
        [
          {
            "Name": "unused_field"
          },
          {
            "Name": "unused_function"
          },
          {
            "Name": "unused_mut_parameter"
          },
          {
            "Name": "unused_variable"
          }
        ]
      ]
    }
  ],
  "functions": {
    "create": {
      "source_index": 0,
      "index": 0,
      "doc": " Creates and shares a new staking object.\n Must only be called by the initialization function.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "epoch_zero_duration",
          "type_": "u64"
        },
        {
          "name": "epoch_duration",
          "type_": "u64"
        },
        {
          "name": "n_shards",
          "type_": "u16"
        },
        {
          "name": "package_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "register_candidate": {
      "source_index": 1,
      "index": 1,
      "doc": " Creates a staking pool for the candidate, registers the candidate as a storage node.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "name",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "network_address",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        },
        {
          "name": "metadata",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "node_metadata"
              },
              "name": "NodeMetadata",
              "type_arguments": []
            }
          }
        },
        {
          "name": "public_key",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "network_public_key",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "proof_of_possession",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "commission_rate",
          "type_": "u16"
        },
        {
          "name": "storage_price",
          "type_": "u64"
        },
        {
          "name": "write_price",
          "type_": "u64"
        },
        {
          "name": "node_capacity",
          "type_": "u64"
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "storage_node"
            },
            "name": "StorageNodeCap",
            "type_arguments": []
          }
        }
      ]
    },
    "set_next_commission": {
      "source_index": 2,
      "index": 2,
      "doc": " Sets next_commission in the staking pool, which will then take effect as commission rate\n one epoch after setting the value (to allow stakers to react to setting this).",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "commission_rate",
          "type_": "u16"
        }
      ],
      "return_": []
    },
    "collect_commission": {
      "source_index": 3,
      "index": 3,
      "doc": " Collects the commission for the node. Transaction sender must be the\n `CommissionReceiver` for the `StakingPool`.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "auth",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "auth"
              },
              "name": "Authenticated",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "Coin",
            "type_arguments": [
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "wal"
                  },
                  "name": "WAL",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ]
    },
    "set_commission_receiver": {
      "source_index": 4,
      "index": 4,
      "doc": " Sets the commission receiver for the node.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "auth",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "auth"
              },
              "name": "Authenticated",
              "type_arguments": []
            }
          }
        },
        {
          "name": "receiver",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "auth"
              },
              "name": "Authorized",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "set_governance_authorized": {
      "source_index": 5,
      "index": 5,
      "doc": " Sets the governance authorized object for the pool.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "auth",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "auth"
              },
              "name": "Authenticated",
              "type_arguments": []
            }
          }
        },
        {
          "name": "authorized",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "auth"
              },
              "name": "Authorized",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "check_governance_authorization": {
      "source_index": 6,
      "index": 6,
      "doc": " Checks if the governance authorized object matches the authenticated object.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "auth",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "auth"
              },
              "name": "Authenticated",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "get_current_node_weight": {
      "source_index": 7,
      "index": 7,
      "doc": " Returns the current node weight for the given node id.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        "u16"
      ]
    },
    "compute_next_committee": {
      "source_index": 8,
      "index": 8,
      "doc": " Computes the committee for the next epoch.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "committee"
            },
            "name": "Committee",
            "type_arguments": []
          }
        }
      ]
    },
    "set_storage_price_vote": {
      "source_index": 9,
      "index": 9,
      "doc": " Sets the storage price vote for the pool.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "storage_price",
          "type_": "u64"
        }
      ],
      "return_": []
    },
    "set_write_price_vote": {
      "source_index": 10,
      "index": 10,
      "doc": " Sets the write price vote for the pool.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "write_price",
          "type_": "u64"
        }
      ],
      "return_": []
    },
    "set_node_capacity_vote": {
      "source_index": 11,
      "index": 11,
      "doc": " Sets the node capacity vote for the pool.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_capacity",
          "type_": "u64"
        }
      ],
      "return_": []
    },
    "node_metadata": {
      "source_index": 12,
      "index": 12,
      "doc": " Get `NodeMetadata` for the given node.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "node_metadata"
            },
            "name": "NodeMetadata",
            "type_arguments": []
          }
        }
      ]
    },
    "set_next_public_key": {
      "source_index": 13,
      "index": 13,
      "doc": " Sets the public key of a node to be used starting from the next epoch for which the node is\n selected.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "public_key",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "proof_of_possession",
          "type_": {
            "vector": "u8"
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "set_name": {
      "source_index": 14,
      "index": 14,
      "doc": " Sets the name of a storage node.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "name",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "set_network_address": {
      "source_index": 15,
      "index": 15,
      "doc": " Sets the network address or host of a storage node.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "network_address",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000001",
                "name": "string"
              },
              "name": "String",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "set_network_public_key": {
      "source_index": 16,
      "index": 16,
      "doc": " Sets the public key used for TLS communication for a node.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "network_public_key",
          "type_": {
            "vector": "u8"
          }
        }
      ],
      "return_": []
    },
    "set_node_metadata": {
      "source_index": 17,
      "index": 17,
      "doc": " Sets the metadata of a storage node.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "self",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "metadata",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "node_metadata"
              },
              "name": "NodeMetadata",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "voting_end": {
      "source_index": 18,
      "index": 18,
      "doc": " Ends the voting period and runs the apportionment if the current time allows.\n Permissionless, can be called by anyone.\n Emits: `EpochParametersSelected` event.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "initiate_epoch_change": {
      "source_index": 19,
      "index": 19,
      "doc": " Initiates the epoch change if the current time allows.\n Emits: `EpochChangeStart` event.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "system",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "system"
                  },
                  "name": "System",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "epoch_sync_done": {
      "source_index": 20,
      "index": 20,
      "doc": " Signals to the contract that the node has received all its shards for the new epoch.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "epoch",
          "type_": "u32"
        },
        {
          "name": "clock",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "clock"
                  },
                  "name": "Clock",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "stake_with_pool": {
      "source_index": 21,
      "index": 21,
      "doc": " Stake `Coin` with the staking pool.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "to_stake",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "coin"
              },
              "name": "Coin",
              "type_arguments": [
                {
                  "Datatype": {
                    "module": {
                      "address": "0000000000000000000000000000000000000000000000000000000000000000",
                      "name": "wal"
                    },
                    "name": "WAL",
                    "type_arguments": []
                  }
                }
              ]
            }
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000000",
              "name": "staked_wal"
            },
            "name": "StakedWal",
            "type_arguments": []
          }
        }
      ]
    },
    "request_withdraw_stake": {
      "source_index": 22,
      "index": 22,
      "doc": " Marks the amount as a withdrawal to be processed and removes it from the stake weight of the\n node. Allows the user to call withdraw_stake after the epoch change to the next epoch and\n shard transfer is done.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "staked_wal",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staked_wal"
                  },
                  "name": "StakedWal",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "withdraw_stake": {
      "source_index": 23,
      "index": 23,
      "doc": " Withdraws the staked amount from the staking pool.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "staked_wal",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000000",
                "name": "staked_wal"
              },
              "name": "StakedWal",
              "type_arguments": []
            }
          }
        },
        {
          "name": "ctx",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000002",
                    "name": "tx_context"
                  },
                  "name": "TxContext",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "coin"
            },
            "name": "Coin",
            "type_arguments": [
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "wal"
                  },
                  "name": "WAL",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ]
    },
    "try_join_active_set": {
      "source_index": 24,
      "index": 24,
      "doc": " Allows a node to join the active set if it has sufficient stake.\n This can be useful if another node in the active had its stake\n reduced to be lower than that of the current node.\n In that case, the current node will be added to the active set either\n the next time stake is added or by calling this function.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "cap",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "storage_node"
                  },
                  "name": "StorageNodeCap",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "package_id": {
      "source_index": 25,
      "index": 25,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Datatype": {
            "module": {
              "address": "0000000000000000000000000000000000000000000000000000000000000002",
              "name": "object"
            },
            "name": "ID",
            "type_arguments": []
          }
        }
      ]
    },
    "version": {
      "source_index": 26,
      "index": 26,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "epoch": {
      "source_index": 27,
      "index": 27,
      "doc": " Returns the current epoch of the staking object.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "u32"
      ]
    },
    "is_quorum": {
      "source_index": 28,
      "index": 28,
      "doc": " Checks if the weight reaches a quorum.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "weight",
          "type_": "u16"
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "calculate_rewards": {
      "source_index": 29,
      "index": 29,
      "doc": " Calculate the rewards for an amount with value `staked_principal`, staked in the pool with\n the given `node_id` between `activation_epoch` and `withdraw_epoch`.\n\n This function can be used with `dev_inspect` to calculate the expected rewards for a `StakedWal`\n object or, more generally, the returns provided by a given node over a given period.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "node_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        },
        {
          "name": "staked_principal",
          "type_": "u64"
        },
        {
          "name": "activation_epoch",
          "type_": "u32"
        },
        {
          "name": "withdraw_epoch",
          "type_": "u32"
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "can_withdraw_staked_wal_early": {
      "source_index": 30,
      "index": 30,
      "doc": " Call `staked_wal::can_withdraw_early` to allow calling this method in applications.",
      "attributes": [],
      "visibility": "Public",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "staked_wal",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staked_wal"
                  },
                  "name": "StakedWal",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        "bool"
      ]
    },
    "set_new_package_id": {
      "source_index": 31,
      "index": 31,
      "doc": null,
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        },
        {
          "name": "new_package_id",
          "type_": {
            "Datatype": {
              "module": {
                "address": "0000000000000000000000000000000000000000000000000000000000000002",
                "name": "object"
              },
              "name": "ID",
              "type_arguments": []
            }
          }
        }
      ],
      "return_": []
    },
    "migrate": {
      "source_index": 32,
      "index": 32,
      "doc": " Migrate the staking object to the new package id.\n\n This function sets the new package id and version and can be modified in future versions\n to migrate changes in the `staking_inner` object if needed.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": []
    },
    "inner_mut": {
      "source_index": 33,
      "index": 33,
      "doc": " Get a mutable reference to `StakingInner` from the `Staking`.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              true,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            true,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000000",
                  "name": "staking_inner"
                },
                "name": "StakingInnerV1",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    },
    "inner": {
      "source_index": 34,
      "index": 34,
      "doc": " Get an immutable reference to `StakingInner` from the `Staking`.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "staking",
          "type_": {
            "Reference": [
              false,
              {
                "Datatype": {
                  "module": {
                    "address": "0000000000000000000000000000000000000000000000000000000000000000",
                    "name": "staking"
                  },
                  "name": "Staking",
                  "type_arguments": []
                }
              }
            ]
          }
        }
      ],
      "return_": [
        {
          "Reference": [
            false,
            {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000000",
                  "name": "staking_inner"
                },
                "name": "StakingInnerV1",
                "type_arguments": []
              }
            }
          ]
        }
      ]
    }
  },
  "structs": {
    "Staking": {
      "index": 0,
      "doc": " The one and only staking object.",
      "attributes": [],
      "abilities": [
        "Key"
      ],
      "type_parameters": [],
      "fields": {
        "positional_fields": false,
        "fields": {
          "id": {
            "index": 0,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "UID",
                "type_arguments": []
              }
            }
          },
          "version": {
            "index": 1,
            "doc": null,
            "type_": "u64"
          },
          "package_id": {
            "index": 2,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000002",
                  "name": "object"
                },
                "name": "ID",
                "type_arguments": []
              }
            }
          },
          "new_package_id": {
            "index": 3,
            "doc": null,
            "type_": {
              "Datatype": {
                "module": {
                  "address": "0000000000000000000000000000000000000000000000000000000000000001",
                  "name": "option"
                },
                "name": "Option",
                "type_arguments": [
                  {
                    "Datatype": {
                      "module": {
                        "address": "0000000000000000000000000000000000000000000000000000000000000002",
                        "name": "object"
                      },
                      "name": "ID",
                      "type_arguments": []
                    }
                  }
                ]
              }
            }
          }
        }
      }
    }
  },
  "enums": {}
}