{
  "doc": null,
  "immediate_dependencies": [],
  "attributes": [],
  "functions": {
    "encoded_blob_length": {
      "source_index": 0,
      "index": 0,
      "doc": " Computes the encoded length of a blob for the Red Stuff encoding using\n Reed-Solomon, given its unencoded size and the number of shards.\n The output length includes the size of the metadata hashes and the blob ID.\n This computation is the same as done by the function of the same name in\n `crates/walrus_core/encoding/config.rs` and should be kept in sync.",
      "attributes": [],
      "visibility": "Package",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "unencoded_length",
          "type_": "u64"
        },
        {
          "name": "n_shards",
          "type_": "u16"
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "source_symbols_primary": {
      "source_index": 1,
      "index": 1,
      "doc": " The number of primary source symbols per sliver given `n_shards`.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "n_shards",
          "type_": "u16"
        }
      ],
      "return_": [
        "u16"
      ]
    },
    "source_symbols_secondary": {
      "source_index": 2,
      "index": 2,
      "doc": " The number of secondary source symbols per sliver given `n_shards`.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "n_shards",
          "type_": "u16"
        }
      ],
      "return_": [
        "u16"
      ]
    },
    "n_source_symbols": {
      "source_index": 3,
      "index": 3,
      "doc": " The total number of source symbols given `n_shards`.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "n_shards",
          "type_": "u16"
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "symbol_size": {
      "source_index": 4,
      "index": 4,
      "doc": " Computes the symbol size given the `unencoded_length` and number of shards\n `n_shards`. If the resulting symbols would be larger than a `u16`, this\n results in an Error.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "unencoded_length",
          "type_": "u64"
        },
        {
          "name": "n_shards",
          "type_": "u16"
        }
      ],
      "return_": [
        "u16"
      ]
    },
    "metadata_size": {
      "source_index": 5,
      "index": 5,
      "doc": " The size of the metadata, i.e. sliver root hashes and blob_id.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "n_shards",
          "type_": "u16"
        }
      ],
      "return_": [
        "u64"
      ]
    },
    "max_byzantine": {
      "source_index": 6,
      "index": 6,
      "doc": " Maximum number of byzantine shards, given `n_shards`.",
      "attributes": [],
      "visibility": "Private",
      "entry": false,
      "type_parameters": [],
      "parameters": [
        {
          "name": "n_shards",
          "type_": "u16"
        }
      ],
      "return_": [
        "u16"
      ]
    }
  },
  "structs": {},
  "enums": {}
}